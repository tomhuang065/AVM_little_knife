{"ast":null,"code":"'use strict';\n\nmodule.exports = dataweave;\ndataweave.displayName = 'dataweave';\ndataweave.aliases = [];\n\nfunction dataweave(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.dataweave = {\n      url: /\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,\n      property: {\n        pattern: /(?:\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\w+)(?=\\s*[:@])/,\n        greedy: true\n      },\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      'mime-type': /\\b(?:text|audio|video|application|multipart|image)\\/[\\w+-]+/,\n      date: {\n        pattern: /\\|[\\w:+-]+\\|/,\n        greedy: true\n      },\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      }, {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }],\n      regex: {\n        pattern: /\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,\n        greedy: true\n      },\n      function: /\\b[A-Za-z_]\\w*(?=\\s*\\()/i,\n      number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n      punctuation: /[{}[\\];(),.:@]/,\n      operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|\\!|\\?/,\n      boolean: /\\b(?:true|false)\\b/,\n      keyword: /\\b(?:match|input|output|ns|type|update|null|if|else|using|unless|at|is|as|case|do|fun|var|not|and|or)\\b/\n    };\n  })(Prism);\n}","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/refractor/lang/dataweave.js"],"names":["module","exports","dataweave","displayName","aliases","Prism","languages","url","property","pattern","greedy","string","date","comment","lookbehind","regex","function","number","punctuation","operator","boolean","keyword"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AACAA,SAAS,CAACC,WAAV,GAAwB,WAAxB;AACAD,SAAS,CAACE,OAAV,GAAoB,EAApB;;AACA,SAASF,SAAT,CAAmBG,KAAnB,EAA0B;AACxB;;AAAC,GAAC,UAAUA,KAAV,EAAiB;AACjBA,IAAAA,KAAK,CAACC,SAAN,CAAgBJ,SAAhB,GAA4B;AAC1BK,MAAAA,GAAG,EAAE,gDADqB;AAE1BC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,OAAO,EAAE,mDADD;AAERC,QAAAA,MAAM,EAAE;AAFA,OAFgB;AAM1BC,MAAAA,MAAM,EAAE;AACNF,QAAAA,OAAO,EAAE,oCADH;AAENC,QAAAA,MAAM,EAAE;AAFF,OANkB;AAU1B,mBAAa,6DAVa;AAW1BE,MAAAA,IAAI,EAAE;AACJH,QAAAA,OAAO,EAAE,cADL;AAEJC,QAAAA,MAAM,EAAE;AAFJ,OAXoB;AAe1BG,MAAAA,OAAO,EAAE,CACP;AACEJ,QAAAA,OAAO,EAAE,iCADX;AAEEK,QAAAA,UAAU,EAAE,IAFd;AAGEJ,QAAAA,MAAM,EAAE;AAHV,OADO,EAMP;AACED,QAAAA,OAAO,EAAE,kBADX;AAEEK,QAAAA,UAAU,EAAE,IAFd;AAGEJ,QAAAA,MAAM,EAAE;AAHV,OANO,CAfiB;AA2B1BK,MAAAA,KAAK,EAAE;AACLN,QAAAA,OAAO,EAAE,gCADJ;AAELC,QAAAA,MAAM,EAAE;AAFH,OA3BmB;AA+B1BM,MAAAA,QAAQ,EAAE,0BA/BgB;AAgC1BC,MAAAA,MAAM,EAAE,oCAhCkB;AAiC1BC,MAAAA,WAAW,EAAE,gBAjCa;AAkC1BC,MAAAA,QAAQ,EAAE,wCAlCgB;AAmC1BC,MAAAA,OAAO,EAAE,oBAnCiB;AAoC1BC,MAAAA,OAAO,EAAE;AApCiB,KAA5B;AAsCD,GAvCA,EAuCEhB,KAvCF;AAwCF","sourcesContent":["'use strict'\n\nmodule.exports = dataweave\ndataweave.displayName = 'dataweave'\ndataweave.aliases = []\nfunction dataweave(Prism) {\n  ;(function (Prism) {\n    Prism.languages.dataweave = {\n      url: /\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,\n      property: {\n        pattern: /(?:\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\w+)(?=\\s*[:@])/,\n        greedy: true\n      },\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      'mime-type': /\\b(?:text|audio|video|application|multipart|image)\\/[\\w+-]+/,\n      date: {\n        pattern: /\\|[\\w:+-]+\\|/,\n        greedy: true\n      },\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      regex: {\n        pattern: /\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,\n        greedy: true\n      },\n      function: /\\b[A-Za-z_]\\w*(?=\\s*\\()/i,\n      number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n      punctuation: /[{}[\\];(),.:@]/,\n      operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|\\!|\\?/,\n      boolean: /\\b(?:true|false)\\b/,\n      keyword: /\\b(?:match|input|output|ns|type|update|null|if|else|using|unless|at|is|as|case|do|fun|var|not|and|or)\\b/\n    }\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}