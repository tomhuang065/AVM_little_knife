{"ast":null,"code":"'use strict';\n\nmodule.exports = graphql;\ngraphql.displayName = 'graphql';\ngraphql.aliases = [];\n\nfunction graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    description: {\n      pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'language-markdown': {\n          pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: Prism.languages.markdown\n        }\n      }\n    },\n    string: {\n      pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:true|false)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*)[a-zA-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n    operator: /[!=|&]|\\.{3}/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    constant: /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n  };\n}","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/refractor/lang/graphql.js"],"names":["module","exports","graphql","displayName","aliases","Prism","languages","comment","description","pattern","greedy","alias","inside","lookbehind","markdown","string","number","boolean","variable","directive","fragment","keyword","operator","punctuation","constant"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AACAA,OAAO,CAACC,WAAR,GAAsB,SAAtB;AACAD,OAAO,CAACE,OAAR,GAAkB,EAAlB;;AACA,SAASF,OAAT,CAAiBG,KAAjB,EAAwB;AACtBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,OAAhB,GAA0B;AACxBK,IAAAA,OAAO,EAAE,KADe;AAExBC,IAAAA,WAAW,EAAE;AACXC,MAAAA,OAAO,EAAE,kEADE;AAEXC,MAAAA,MAAM,EAAE,IAFG;AAGXC,MAAAA,KAAK,EAAE,QAHI;AAIXC,MAAAA,MAAM,EAAE;AACN,6BAAqB;AACnBH,UAAAA,OAAO,EAAE,iCADU;AAEnBI,UAAAA,UAAU,EAAE,IAFO;AAGnBD,UAAAA,MAAM,EAAEP,KAAK,CAACC,SAAN,CAAgBQ;AAHL;AADf;AAJG,KAFW;AAcxBC,IAAAA,MAAM,EAAE;AACNN,MAAAA,OAAO,EAAE,gDADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KAdgB;AAkBxBM,IAAAA,MAAM,EAAE,0CAlBgB;AAmBxBC,IAAAA,OAAO,EAAE,oBAnBe;AAoBxBC,IAAAA,QAAQ,EAAE,cApBc;AAqBxBC,IAAAA,SAAS,EAAE;AACTV,MAAAA,OAAO,EAAE,aADA;AAETE,MAAAA,KAAK,EAAE;AAFE,KArBa;AAyBxB,iBAAa;AACXF,MAAAA,OAAO,EAAE,8DADE;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAzBW;AA6BxB,kBAAc;AACZD,MAAAA,OAAO,EAAE,4EADG;AAEZI,MAAAA,UAAU,EAAE;AAFA,KA7BU;AAiCxBO,IAAAA,QAAQ,EAAE;AACRX,MAAAA,OAAO,EAAE,8CADD;AAERI,MAAAA,UAAU,EAAE,IAFJ;AAGRF,MAAAA,KAAK,EAAE;AAHC,KAjCc;AAsCxBU,IAAAA,OAAO,EAAE,sIAtCe;AAuCxBC,IAAAA,QAAQ,EAAE,cAvCc;AAwCxBC,IAAAA,WAAW,EAAE,gBAxCW;AAyCxBC,IAAAA,QAAQ,EAAE;AAzCc,GAA1B;AA2CD","sourcesContent":["'use strict'\n\nmodule.exports = graphql\ngraphql.displayName = 'graphql'\ngraphql.aliases = []\nfunction graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    description: {\n      pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'language-markdown': {\n          pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: Prism.languages.markdown\n        }\n      }\n    },\n    string: {\n      pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:true|false)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*)[a-zA-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n    operator: /[!=|&]|\\.{3}/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    constant: /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n  }\n}\n"]},"metadata":{},"sourceType":"script"}