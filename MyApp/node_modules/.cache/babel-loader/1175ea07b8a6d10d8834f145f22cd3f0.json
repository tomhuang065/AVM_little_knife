{"ast":null,"code":"'use strict';\n\nmodule.exports = xeora;\nxeora.displayName = 'xeora';\nxeora.aliases = ['xeoracube'];\n\nfunction xeora(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(?:![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /}:[-\\w.]+:{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    });\n    Prism.languages.insertBefore('inside', 'punctuation', {\n      variable: Prism.languages.xeora['function-inline'].inside['variable']\n    }, Prism.languages.xeora['function-block']);\n    Prism.languages.xeoracube = Prism.languages.xeora;\n  })(Prism);\n}","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/refractor/lang/xeora.js"],"names":["module","exports","xeora","displayName","aliases","Prism","languages","extend","constant","pattern","inside","punctuation","variable","operator","alias","tag","attribute","insertBefore","xeoracube"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = xeora\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\nfunction xeora(Prism) {\n  ;(function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(?:![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /}:[-\\w.]+:{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}