{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport { wrapConnectorHooks } from './wrapConnectorHooks';\nimport { isRef } from '../utils/isRef';\nimport { shallowEqual } from '@react-dnd/shallowequal';\nexport var SourceConnector = /*#__PURE__*/function () {\n  function SourceConnector(backend) {\n    var _this = this;\n\n    _classCallCheck(this, SourceConnector);\n\n    this.hooks = wrapConnectorHooks({\n      dragSource: function dragSource(node, options) {\n        _this.clearDragSource();\n\n        _this.dragSourceOptions = options || null;\n\n        if (isRef(node)) {\n          _this.dragSourceRef = node;\n        } else {\n          _this.dragSourceNode = node;\n        }\n\n        _this.reconnectDragSource();\n      },\n      dragPreview: function dragPreview(node, options) {\n        _this.clearDragPreview();\n\n        _this.dragPreviewOptions = options || null;\n\n        if (isRef(node)) {\n          _this.dragPreviewRef = node;\n        } else {\n          _this.dragPreviewNode = node;\n        }\n\n        _this.reconnectDragPreview();\n      }\n    });\n    this.handlerId = null; // The drop target may either be attached via ref or connect function\n\n    this.dragSourceRef = null;\n    this.dragSourceOptionsInternal = null; // The drag preview may either be attached via ref or connect function\n\n    this.dragPreviewRef = null;\n    this.dragPreviewOptionsInternal = null;\n    this.lastConnectedHandlerId = null;\n    this.lastConnectedDragSource = null;\n    this.lastConnectedDragSourceOptions = null;\n    this.lastConnectedDragPreview = null;\n    this.lastConnectedDragPreviewOptions = null;\n    this.backend = backend;\n  }\n\n  _createClass(SourceConnector, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(newHandlerId) {\n      if (this.handlerId === newHandlerId) {\n        return;\n      }\n\n      this.handlerId = newHandlerId;\n      this.reconnect();\n    }\n  }, {\n    key: \"reconnect\",\n    value: function reconnect() {\n      this.reconnectDragSource();\n      this.reconnectDragPreview();\n    }\n  }, {\n    key: \"reconnectDragSource\",\n    value: function reconnectDragSource() {\n      var dragSource = this.dragSource; // if nothing has changed then don't resubscribe\n\n      var didChange = this.didHandlerIdChange() || this.didConnectedDragSourceChange() || this.didDragSourceOptionsChange();\n\n      if (didChange) {\n        this.disconnectDragSource();\n      }\n\n      if (!this.handlerId) {\n        return;\n      }\n\n      if (!dragSource) {\n        this.lastConnectedDragSource = dragSource;\n        return;\n      }\n\n      if (didChange) {\n        this.lastConnectedHandlerId = this.handlerId;\n        this.lastConnectedDragSource = dragSource;\n        this.lastConnectedDragSourceOptions = this.dragSourceOptions;\n        this.dragSourceUnsubscribe = this.backend.connectDragSource(this.handlerId, dragSource, this.dragSourceOptions);\n      }\n    }\n  }, {\n    key: \"reconnectDragPreview\",\n    value: function reconnectDragPreview() {\n      var dragPreview = this.dragPreview; // if nothing has changed then don't resubscribe\n\n      var didChange = this.didHandlerIdChange() || this.didConnectedDragPreviewChange() || this.didDragPreviewOptionsChange();\n\n      if (didChange) {\n        this.disconnectDragPreview();\n      }\n\n      if (!this.handlerId) {\n        return;\n      }\n\n      if (!dragPreview) {\n        this.lastConnectedDragPreview = dragPreview;\n        return;\n      }\n\n      if (didChange) {\n        this.lastConnectedHandlerId = this.handlerId;\n        this.lastConnectedDragPreview = dragPreview;\n        this.lastConnectedDragPreviewOptions = this.dragPreviewOptions;\n        this.dragPreviewUnsubscribe = this.backend.connectDragPreview(this.handlerId, dragPreview, this.dragPreviewOptions);\n      }\n    }\n  }, {\n    key: \"didHandlerIdChange\",\n    value: function didHandlerIdChange() {\n      return this.lastConnectedHandlerId !== this.handlerId;\n    }\n  }, {\n    key: \"didConnectedDragSourceChange\",\n    value: function didConnectedDragSourceChange() {\n      return this.lastConnectedDragSource !== this.dragSource;\n    }\n  }, {\n    key: \"didConnectedDragPreviewChange\",\n    value: function didConnectedDragPreviewChange() {\n      return this.lastConnectedDragPreview !== this.dragPreview;\n    }\n  }, {\n    key: \"didDragSourceOptionsChange\",\n    value: function didDragSourceOptionsChange() {\n      return !shallowEqual(this.lastConnectedDragSourceOptions, this.dragSourceOptions);\n    }\n  }, {\n    key: \"didDragPreviewOptionsChange\",\n    value: function didDragPreviewOptionsChange() {\n      return !shallowEqual(this.lastConnectedDragPreviewOptions, this.dragPreviewOptions);\n    }\n  }, {\n    key: \"disconnectDragSource\",\n    value: function disconnectDragSource() {\n      if (this.dragSourceUnsubscribe) {\n        this.dragSourceUnsubscribe();\n        this.dragSourceUnsubscribe = undefined;\n      }\n    }\n  }, {\n    key: \"disconnectDragPreview\",\n    value: function disconnectDragPreview() {\n      if (this.dragPreviewUnsubscribe) {\n        this.dragPreviewUnsubscribe();\n        this.dragPreviewUnsubscribe = undefined;\n        this.dragPreviewNode = null;\n        this.dragPreviewRef = null;\n      }\n    }\n  }, {\n    key: \"clearDragSource\",\n    value: function clearDragSource() {\n      this.dragSourceNode = null;\n      this.dragSourceRef = null;\n    }\n  }, {\n    key: \"clearDragPreview\",\n    value: function clearDragPreview() {\n      this.dragPreviewNode = null;\n      this.dragPreviewRef = null;\n    }\n  }, {\n    key: \"connectTarget\",\n    get: function get() {\n      return this.dragSource;\n    }\n  }, {\n    key: \"dragSourceOptions\",\n    get: function get() {\n      return this.dragSourceOptionsInternal;\n    },\n    set: function set(options) {\n      this.dragSourceOptionsInternal = options;\n    }\n  }, {\n    key: \"dragPreviewOptions\",\n    get: function get() {\n      return this.dragPreviewOptionsInternal;\n    },\n    set: function set(options) {\n      this.dragPreviewOptionsInternal = options;\n    }\n  }, {\n    key: \"dragSource\",\n    get: function get() {\n      return this.dragSourceNode || this.dragSourceRef && this.dragSourceRef.current;\n    }\n  }, {\n    key: \"dragPreview\",\n    get: function get() {\n      return this.dragPreviewNode || this.dragPreviewRef && this.dragPreviewRef.current;\n    }\n  }]);\n\n  return SourceConnector;\n}();","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/react-dnd/dist/esm/common/SourceConnector.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","wrapConnectorHooks","isRef","shallowEqual","SourceConnector","backend","_this","hooks","dragSource","node","options","clearDragSource","dragSourceOptions","dragSourceRef","dragSourceNode","reconnectDragSource","dragPreview","clearDragPreview","dragPreviewOptions","dragPreviewRef","dragPreviewNode","reconnectDragPreview","handlerId","dragSourceOptionsInternal","dragPreviewOptionsInternal","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","lastConnectedDragPreview","lastConnectedDragPreviewOptions","value","receiveHandlerId","newHandlerId","reconnect","didChange","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","dragSourceUnsubscribe","connectDragSource","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","dragPreviewUnsubscribe","connectDragPreview","undefined","get","set","current"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { wrapConnectorHooks } from './wrapConnectorHooks';\nimport { isRef } from '../utils/isRef';\nimport { shallowEqual } from '@react-dnd/shallowequal';\nexport var SourceConnector = /*#__PURE__*/function () {\n  function SourceConnector(backend) {\n    var _this = this;\n\n    _classCallCheck(this, SourceConnector);\n\n    this.hooks = wrapConnectorHooks({\n      dragSource: function dragSource(node, options) {\n        _this.clearDragSource();\n\n        _this.dragSourceOptions = options || null;\n\n        if (isRef(node)) {\n          _this.dragSourceRef = node;\n        } else {\n          _this.dragSourceNode = node;\n        }\n\n        _this.reconnectDragSource();\n      },\n      dragPreview: function dragPreview(node, options) {\n        _this.clearDragPreview();\n\n        _this.dragPreviewOptions = options || null;\n\n        if (isRef(node)) {\n          _this.dragPreviewRef = node;\n        } else {\n          _this.dragPreviewNode = node;\n        }\n\n        _this.reconnectDragPreview();\n      }\n    });\n    this.handlerId = null; // The drop target may either be attached via ref or connect function\n\n    this.dragSourceRef = null;\n    this.dragSourceOptionsInternal = null; // The drag preview may either be attached via ref or connect function\n\n    this.dragPreviewRef = null;\n    this.dragPreviewOptionsInternal = null;\n    this.lastConnectedHandlerId = null;\n    this.lastConnectedDragSource = null;\n    this.lastConnectedDragSourceOptions = null;\n    this.lastConnectedDragPreview = null;\n    this.lastConnectedDragPreviewOptions = null;\n    this.backend = backend;\n  }\n\n  _createClass(SourceConnector, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(newHandlerId) {\n      if (this.handlerId === newHandlerId) {\n        return;\n      }\n\n      this.handlerId = newHandlerId;\n      this.reconnect();\n    }\n  }, {\n    key: \"reconnect\",\n    value: function reconnect() {\n      this.reconnectDragSource();\n      this.reconnectDragPreview();\n    }\n  }, {\n    key: \"reconnectDragSource\",\n    value: function reconnectDragSource() {\n      var dragSource = this.dragSource; // if nothing has changed then don't resubscribe\n\n      var didChange = this.didHandlerIdChange() || this.didConnectedDragSourceChange() || this.didDragSourceOptionsChange();\n\n      if (didChange) {\n        this.disconnectDragSource();\n      }\n\n      if (!this.handlerId) {\n        return;\n      }\n\n      if (!dragSource) {\n        this.lastConnectedDragSource = dragSource;\n        return;\n      }\n\n      if (didChange) {\n        this.lastConnectedHandlerId = this.handlerId;\n        this.lastConnectedDragSource = dragSource;\n        this.lastConnectedDragSourceOptions = this.dragSourceOptions;\n        this.dragSourceUnsubscribe = this.backend.connectDragSource(this.handlerId, dragSource, this.dragSourceOptions);\n      }\n    }\n  }, {\n    key: \"reconnectDragPreview\",\n    value: function reconnectDragPreview() {\n      var dragPreview = this.dragPreview; // if nothing has changed then don't resubscribe\n\n      var didChange = this.didHandlerIdChange() || this.didConnectedDragPreviewChange() || this.didDragPreviewOptionsChange();\n\n      if (didChange) {\n        this.disconnectDragPreview();\n      }\n\n      if (!this.handlerId) {\n        return;\n      }\n\n      if (!dragPreview) {\n        this.lastConnectedDragPreview = dragPreview;\n        return;\n      }\n\n      if (didChange) {\n        this.lastConnectedHandlerId = this.handlerId;\n        this.lastConnectedDragPreview = dragPreview;\n        this.lastConnectedDragPreviewOptions = this.dragPreviewOptions;\n        this.dragPreviewUnsubscribe = this.backend.connectDragPreview(this.handlerId, dragPreview, this.dragPreviewOptions);\n      }\n    }\n  }, {\n    key: \"didHandlerIdChange\",\n    value: function didHandlerIdChange() {\n      return this.lastConnectedHandlerId !== this.handlerId;\n    }\n  }, {\n    key: \"didConnectedDragSourceChange\",\n    value: function didConnectedDragSourceChange() {\n      return this.lastConnectedDragSource !== this.dragSource;\n    }\n  }, {\n    key: \"didConnectedDragPreviewChange\",\n    value: function didConnectedDragPreviewChange() {\n      return this.lastConnectedDragPreview !== this.dragPreview;\n    }\n  }, {\n    key: \"didDragSourceOptionsChange\",\n    value: function didDragSourceOptionsChange() {\n      return !shallowEqual(this.lastConnectedDragSourceOptions, this.dragSourceOptions);\n    }\n  }, {\n    key: \"didDragPreviewOptionsChange\",\n    value: function didDragPreviewOptionsChange() {\n      return !shallowEqual(this.lastConnectedDragPreviewOptions, this.dragPreviewOptions);\n    }\n  }, {\n    key: \"disconnectDragSource\",\n    value: function disconnectDragSource() {\n      if (this.dragSourceUnsubscribe) {\n        this.dragSourceUnsubscribe();\n        this.dragSourceUnsubscribe = undefined;\n      }\n    }\n  }, {\n    key: \"disconnectDragPreview\",\n    value: function disconnectDragPreview() {\n      if (this.dragPreviewUnsubscribe) {\n        this.dragPreviewUnsubscribe();\n        this.dragPreviewUnsubscribe = undefined;\n        this.dragPreviewNode = null;\n        this.dragPreviewRef = null;\n      }\n    }\n  }, {\n    key: \"clearDragSource\",\n    value: function clearDragSource() {\n      this.dragSourceNode = null;\n      this.dragSourceRef = null;\n    }\n  }, {\n    key: \"clearDragPreview\",\n    value: function clearDragPreview() {\n      this.dragPreviewNode = null;\n      this.dragPreviewRef = null;\n    }\n  }, {\n    key: \"connectTarget\",\n    get: function get() {\n      return this.dragSource;\n    }\n  }, {\n    key: \"dragSourceOptions\",\n    get: function get() {\n      return this.dragSourceOptionsInternal;\n    },\n    set: function set(options) {\n      this.dragSourceOptionsInternal = options;\n    }\n  }, {\n    key: \"dragPreviewOptions\",\n    get: function get() {\n      return this.dragPreviewOptionsInternal;\n    },\n    set: function set(options) {\n      this.dragPreviewOptionsInternal = options;\n    }\n  }, {\n    key: \"dragSource\",\n    get: function get() {\n      return this.dragSourceNode || this.dragSourceRef && this.dragSourceRef.current;\n    }\n  }, {\n    key: \"dragPreview\",\n    get: function get() {\n      return this.dragPreviewNode || this.dragPreviewRef && this.dragPreviewRef.current;\n    }\n  }]);\n\n  return SourceConnector;\n}();"]},"metadata":{},"sourceType":"module"}