{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { useButton } from '../ButtonUnstyled';\nimport { useListbox, defaultListboxReducer, ActionTypes } from '../ListboxUnstyled';\nimport defaultOptionStringifier from './defaultOptionStringifier';\n\nfunction useSelect(props) {\n  const {\n    buttonRef: buttonRefProp,\n    defaultValue,\n    disabled = false,\n    listboxId: listboxIdProp,\n    listboxRef: listboxRefProp,\n    multiple = false,\n    onChange,\n    onOpenChange,\n    open = false,\n    options,\n    optionStringifier = defaultOptionStringifier,\n    value: valueProp\n  } = props;\n  const buttonRef = React.useRef(null);\n  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  const listboxRef = React.useRef(null);\n  const listboxId = useId(listboxIdProp);\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'SelectUnstyled',\n    state: 'value'\n  }); // prevents closing the listbox on keyUp right after opening it\n\n  const ignoreEnterKeyUp = React.useRef(false); // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n\n  const ignoreClick = React.useRef(false); // Ensure the listbox is focused after opening\n\n  const [listboxFocusRequested, requestListboxFocus] = React.useState(false);\n  const focusListboxIfRequested = React.useCallback(() => {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n  const handleListboxRef = useForkRef(listboxRefProp, listboxRef, focusListboxIfRequested);\n  React.useEffect(() => {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(() => {\n    requestListboxFocus(open);\n  }, [open]);\n\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && open) {\n      ignoreClick.current = true;\n    }\n  };\n\n  const createHandleButtonClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && !ignoreClick.current) {\n      onOpenChange == null ? void 0 : onOpenChange(!open);\n    }\n\n    ignoreClick.current = false;\n  };\n\n  const createHandleButtonKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === 'Enter') {\n      ignoreEnterKeyUp.current = true;\n    }\n\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      onOpenChange == null ? void 0 : onOpenChange(true);\n    }\n  };\n\n  const createHandleListboxKeyUp = otherHandlers => event => {\n    var _otherHandlers$onKeyU;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n\n    if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n      var _buttonRef$current;\n\n      buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n    }\n\n    ignoreEnterKeyUp.current = false;\n  };\n\n  const createHandleListboxItemClick = otherHandlers => event => {\n    var _otherHandlers$onClic2;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (!multiple) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const createHandleListboxBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n\n    if (!event.defaultPrevented) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const listboxReducer = (state, action) => {\n    const newState = defaultListboxReducer(state, action); // change selection when listbox is closed\n\n    if (action.type === ActionTypes.keyDown && !open && (action.event.key === 'ArrowUp' || action.event.key === 'ArrowDown')) {\n      return _extends({}, newState, {\n        selectedValue: newState.highlightedValue\n      });\n    }\n\n    if (action.type === ActionTypes.blur || action.type === ActionTypes.setValue || action.type === ActionTypes.optionsChange) {\n      return _extends({}, newState, {\n        highlightedValue: newState.selectedValue\n      });\n    }\n\n    return newState;\n  };\n\n  const {\n    getRootProps: getButtonRootProps,\n    active: buttonActive,\n    focusVisible: buttonFocusVisible\n  } = useButton({\n    disabled,\n    ref: handleButtonRef\n  });\n  const selectedOption = React.useMemo(() => {\n    var _props$options$find;\n\n    return props.multiple ? props.options.filter(o => value.includes(o.value)) : (_props$options$find = props.options.find(o => o.value === value)) != null ? _props$options$find : null;\n  }, [props.multiple, props.options, value]);\n  let useListboxParameters;\n\n  if (props.multiple) {\n    const onChangeMultiple = onChange;\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled;\n\n        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: true,\n      onChange: (e, newOptions) => {\n        const newValues = newOptions.map(o => o.value);\n        setValue(newValues);\n        onChangeMultiple == null ? void 0 : onChangeMultiple(e, newValues);\n      },\n      options,\n      optionStringifier,\n      value: selectedOption\n    };\n  } else {\n    const onChangeSingle = onChange;\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled2;\n\n        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: false,\n      onChange: (e, option) => {\n        var _option$value, _option$value2;\n\n        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);\n        onChangeSingle == null ? void 0 : onChangeSingle(e, (_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);\n      },\n      options,\n      optionStringifier,\n      stateReducer: listboxReducer,\n      value: selectedOption\n    };\n  }\n\n  const {\n    getRootProps: getListboxRootProps,\n    getOptionProps: getListboxOptionProps,\n    getOptionState,\n    highlightedOption,\n    selectedOption: listboxSelectedOption\n  } = useListbox(useListboxParameters);\n\n  const getButtonProps = (otherHandlers = {}) => {\n    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      onMouseDown: createHandleMouseDown(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    })), {\n      role: 'combobox',\n      'aria-expanded': open,\n      'aria-haspopup': 'listbox',\n      'aria-controls': listboxId\n    });\n  };\n\n  const getListboxProps = (otherHandlers = {}) => getListboxRootProps(_extends({}, otherHandlers, {\n    onBlur: createHandleListboxBlur(otherHandlers),\n    onKeyUp: createHandleListboxKeyUp(otherHandlers)\n  }));\n\n  const getOptionProps = (option, otherHandlers = {}) => {\n    return getListboxOptionProps(option, _extends({}, otherHandlers, {\n      onClick: createHandleListboxItemClick(otherHandlers)\n    }));\n  };\n\n  React.useDebugValue({\n    selectedOption: listboxSelectedOption,\n    highlightedOption,\n    open\n  });\n  return {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    open,\n    value\n  };\n}\n\nexport default useSelect;","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/@mui/base/SelectUnstyled/useSelect.js"],"names":["_extends","React","unstable_useControlled","useControlled","unstable_useForkRef","useForkRef","unstable_useId","useId","useButton","useListbox","defaultListboxReducer","ActionTypes","defaultOptionStringifier","useSelect","props","buttonRef","buttonRefProp","defaultValue","disabled","listboxId","listboxIdProp","listboxRef","listboxRefProp","multiple","onChange","onOpenChange","open","options","optionStringifier","value","valueProp","useRef","handleButtonRef","setValue","controlled","default","name","state","ignoreEnterKeyUp","ignoreClick","listboxFocusRequested","requestListboxFocus","useState","focusListboxIfRequested","useCallback","current","focus","handleListboxRef","useEffect","createHandleMouseDown","otherHandlers","event","_otherHandlers$onMous","onMouseDown","call","defaultPrevented","createHandleButtonClick","_otherHandlers$onClic","onClick","createHandleButtonKeyDown","_otherHandlers$onKeyD","onKeyDown","key","preventDefault","createHandleListboxKeyUp","_otherHandlers$onKeyU","onKeyUp","closingKeys","includes","_buttonRef$current","createHandleListboxItemClick","_otherHandlers$onClic2","createHandleListboxBlur","_otherHandlers$onBlur","onBlur","listboxReducer","action","newState","type","keyDown","selectedValue","highlightedValue","blur","optionsChange","getRootProps","getButtonRootProps","active","buttonActive","focusVisible","buttonFocusVisible","ref","selectedOption","useMemo","_props$options$find","filter","o","find","useListboxParameters","onChangeMultiple","id","isOptionDisabled","_o$disabled","optionComparer","v","e","newOptions","newValues","map","onChangeSingle","_o$disabled2","option","_option$value","_option$value2","stateReducer","getListboxRootProps","getOptionProps","getListboxOptionProps","getOptionState","highlightedOption","listboxSelectedOption","getButtonProps","role","getListboxProps","useDebugValue"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { useButton } from '../ButtonUnstyled';\nimport { useListbox, defaultListboxReducer, ActionTypes } from '../ListboxUnstyled';\nimport defaultOptionStringifier from './defaultOptionStringifier';\nfunction useSelect(props) {\n  const {\n    buttonRef: buttonRefProp,\n    defaultValue,\n    disabled = false,\n    listboxId: listboxIdProp,\n    listboxRef: listboxRefProp,\n    multiple = false,\n    onChange,\n    onOpenChange,\n    open = false,\n    options,\n    optionStringifier = defaultOptionStringifier,\n    value: valueProp\n  } = props;\n  const buttonRef = React.useRef(null);\n  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  const listboxRef = React.useRef(null);\n  const listboxId = useId(listboxIdProp);\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'SelectUnstyled',\n    state: 'value'\n  });\n\n  // prevents closing the listbox on keyUp right after opening it\n  const ignoreEnterKeyUp = React.useRef(false);\n\n  // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n  const ignoreClick = React.useRef(false);\n\n  // Ensure the listbox is focused after opening\n  const [listboxFocusRequested, requestListboxFocus] = React.useState(false);\n  const focusListboxIfRequested = React.useCallback(() => {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n  const handleListboxRef = useForkRef(listboxRefProp, listboxRef, focusListboxIfRequested);\n  React.useEffect(() => {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(() => {\n    requestListboxFocus(open);\n  }, [open]);\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n    otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n    if (!event.defaultPrevented && open) {\n      ignoreClick.current = true;\n    }\n  };\n  const createHandleButtonClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n    if (!event.defaultPrevented && !ignoreClick.current) {\n      onOpenChange == null ? void 0 : onOpenChange(!open);\n    }\n    ignoreClick.current = false;\n  };\n  const createHandleButtonKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (event.key === 'Enter') {\n      ignoreEnterKeyUp.current = true;\n    }\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      onOpenChange == null ? void 0 : onOpenChange(true);\n    }\n  };\n  const createHandleListboxKeyUp = otherHandlers => event => {\n    var _otherHandlers$onKeyU;\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    const closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n    if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n      var _buttonRef$current;\n      buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n    }\n    ignoreEnterKeyUp.current = false;\n  };\n  const createHandleListboxItemClick = otherHandlers => event => {\n    var _otherHandlers$onClic2;\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (!multiple) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n  const createHandleListboxBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n    otherHandlers == null ? void 0 : (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n    if (!event.defaultPrevented) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n  const listboxReducer = (state, action) => {\n    const newState = defaultListboxReducer(state, action);\n\n    // change selection when listbox is closed\n    if (action.type === ActionTypes.keyDown && !open && (action.event.key === 'ArrowUp' || action.event.key === 'ArrowDown')) {\n      return _extends({}, newState, {\n        selectedValue: newState.highlightedValue\n      });\n    }\n    if (action.type === ActionTypes.blur || action.type === ActionTypes.setValue || action.type === ActionTypes.optionsChange) {\n      return _extends({}, newState, {\n        highlightedValue: newState.selectedValue\n      });\n    }\n    return newState;\n  };\n  const {\n    getRootProps: getButtonRootProps,\n    active: buttonActive,\n    focusVisible: buttonFocusVisible\n  } = useButton({\n    disabled,\n    ref: handleButtonRef\n  });\n  const selectedOption = React.useMemo(() => {\n    var _props$options$find;\n    return props.multiple ? props.options.filter(o => value.includes(o.value)) : (_props$options$find = props.options.find(o => o.value === value)) != null ? _props$options$find : null;\n  }, [props.multiple, props.options, value]);\n  let useListboxParameters;\n  if (props.multiple) {\n    const onChangeMultiple = onChange;\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled;\n        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: true,\n      onChange: (e, newOptions) => {\n        const newValues = newOptions.map(o => o.value);\n        setValue(newValues);\n        onChangeMultiple == null ? void 0 : onChangeMultiple(e, newValues);\n      },\n      options,\n      optionStringifier,\n      value: selectedOption\n    };\n  } else {\n    const onChangeSingle = onChange;\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled2;\n        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: false,\n      onChange: (e, option) => {\n        var _option$value, _option$value2;\n        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);\n        onChangeSingle == null ? void 0 : onChangeSingle(e, (_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);\n      },\n      options,\n      optionStringifier,\n      stateReducer: listboxReducer,\n      value: selectedOption\n    };\n  }\n  const {\n    getRootProps: getListboxRootProps,\n    getOptionProps: getListboxOptionProps,\n    getOptionState,\n    highlightedOption,\n    selectedOption: listboxSelectedOption\n  } = useListbox(useListboxParameters);\n  const getButtonProps = (otherHandlers = {}) => {\n    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      onMouseDown: createHandleMouseDown(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    })), {\n      role: 'combobox',\n      'aria-expanded': open,\n      'aria-haspopup': 'listbox',\n      'aria-controls': listboxId\n    });\n  };\n  const getListboxProps = (otherHandlers = {}) => getListboxRootProps(_extends({}, otherHandlers, {\n    onBlur: createHandleListboxBlur(otherHandlers),\n    onKeyUp: createHandleListboxKeyUp(otherHandlers)\n  }));\n  const getOptionProps = (option, otherHandlers = {}) => {\n    return getListboxOptionProps(option, _extends({}, otherHandlers, {\n      onClick: createHandleListboxItemClick(otherHandlers)\n    }));\n  };\n  React.useDebugValue({\n    selectedOption: listboxSelectedOption,\n    highlightedOption,\n    open\n  });\n  return {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    open,\n    value\n  };\n}\nexport default useSelect;"]},"metadata":{},"sourceType":"module"}