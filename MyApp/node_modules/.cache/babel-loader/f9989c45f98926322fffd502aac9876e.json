{"ast":null,"code":"import PropTypes from 'prop-types';\nimport createGrid from './createGrid';\n/**\n *\n * Demos:\n *\n * - [Grid (Material UI)](https://mui.com/material-ui/react-grid/)\n *\n * API:\n *\n * - [Grid API](https://mui.com/system/api/grid/)\n */\n\nconst Grid = createGrid();\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the negative margin and padding are apply only to the top and left sides of the grid.\n   */\n  disableEqualOverflow: PropTypes.bool,\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lgOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  mdOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  smOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   */\n  xlOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `xs` breakpoint and wider screens if not overridden.\n   */\n  xsOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number])\n} : void 0;\nexport default Grid;","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/@mui/system/esm/Unstable_Grid/Grid.js"],"names":["PropTypes","createGrid","Grid","process","env","NODE_ENV","propTypes","children","node","columns","oneOfType","arrayOf","number","object","columnSpacing","string","container","bool","direction","oneOf","disableEqualOverflow","lg","lgOffset","md","mdOffset","rowSpacing","sm","smOffset","spacing","sx","func","wrap","xl","xlOffset","xs","xsOffset"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport createGrid from './createGrid';\n/**\n *\n * Demos:\n *\n * - [Grid (Material UI)](https://mui.com/material-ui/react-grid/)\n *\n * API:\n *\n * - [Grid API](https://mui.com/system/api/grid/)\n */\nconst Grid = createGrid();\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the negative margin and padding are apply only to the top and left sides of the grid.\n   */\n  disableEqualOverflow: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lgOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  mdOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  smOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   */\n  xlOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `xs` breakpoint and wider screens if not overridden.\n   */\n  xsOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number])\n} : void 0;\nexport default Grid;"]},"metadata":{},"sourceType":"module"}