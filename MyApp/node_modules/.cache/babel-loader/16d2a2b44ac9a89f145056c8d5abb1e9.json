{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport { invariant } from '@react-dnd/invariant';\nvar isCallingCanDrag = false;\nvar isCallingIsDragging = false;\nexport var DragSourceMonitorImpl = /*#__PURE__*/function () {\n  function DragSourceMonitorImpl(manager) {\n    _classCallCheck(this, DragSourceMonitorImpl);\n\n    this.sourceId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n\n  _createClass(DragSourceMonitorImpl, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(sourceId) {\n      this.sourceId = sourceId;\n    }\n  }, {\n    key: \"getHandlerId\",\n    value: function getHandlerId() {\n      return this.sourceId;\n    }\n  }, {\n    key: \"canDrag\",\n    value: function canDrag() {\n      invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n\n      try {\n        isCallingCanDrag = true;\n        return this.internalMonitor.canDragSource(this.sourceId);\n      } finally {\n        isCallingCanDrag = false;\n      }\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      if (!this.sourceId) {\n        return false;\n      }\n\n      invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n\n      try {\n        isCallingIsDragging = true;\n        return this.internalMonitor.isDraggingSource(this.sourceId);\n      } finally {\n        isCallingIsDragging = false;\n      }\n    }\n  }, {\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener, options) {\n      return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n  }, {\n    key: \"isDraggingSource\",\n    value: function isDraggingSource(sourceId) {\n      return this.internalMonitor.isDraggingSource(sourceId);\n    }\n  }, {\n    key: \"isOverTarget\",\n    value: function isOverTarget(targetId, options) {\n      return this.internalMonitor.isOverTarget(targetId, options);\n    }\n  }, {\n    key: \"getTargetIds\",\n    value: function getTargetIds() {\n      return this.internalMonitor.getTargetIds();\n    }\n  }, {\n    key: \"isSourcePublic\",\n    value: function isSourcePublic() {\n      return this.internalMonitor.isSourcePublic();\n    }\n  }, {\n    key: \"getSourceId\",\n    value: function getSourceId() {\n      return this.internalMonitor.getSourceId();\n    }\n  }, {\n    key: \"subscribeToOffsetChange\",\n    value: function subscribeToOffsetChange(listener) {\n      return this.internalMonitor.subscribeToOffsetChange(listener);\n    }\n  }, {\n    key: \"canDragSource\",\n    value: function canDragSource(sourceId) {\n      return this.internalMonitor.canDragSource(sourceId);\n    }\n  }, {\n    key: \"canDropOnTarget\",\n    value: function canDropOnTarget(targetId) {\n      return this.internalMonitor.canDropOnTarget(targetId);\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.internalMonitor.getItemType();\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.internalMonitor.getItem();\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.internalMonitor.getDropResult();\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.internalMonitor.didDrop();\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.internalMonitor.getInitialClientOffset();\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.internalMonitor.getInitialSourceClientOffset();\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return this.internalMonitor.getSourceClientOffset();\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.internalMonitor.getClientOffset();\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n  }]);\n\n  return DragSourceMonitorImpl;\n}();","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/react-dnd/dist/esm/common/DragSourceMonitorImpl.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","invariant","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","manager","sourceId","internalMonitor","getMonitor","value","receiveHandlerId","getHandlerId","canDrag","canDragSource","isDragging","isDraggingSource","subscribeToStateChange","listener","options","isOverTarget","targetId","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","canDropOnTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { invariant } from '@react-dnd/invariant';\nvar isCallingCanDrag = false;\nvar isCallingIsDragging = false;\nexport var DragSourceMonitorImpl = /*#__PURE__*/function () {\n  function DragSourceMonitorImpl(manager) {\n    _classCallCheck(this, DragSourceMonitorImpl);\n\n    this.sourceId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n\n  _createClass(DragSourceMonitorImpl, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(sourceId) {\n      this.sourceId = sourceId;\n    }\n  }, {\n    key: \"getHandlerId\",\n    value: function getHandlerId() {\n      return this.sourceId;\n    }\n  }, {\n    key: \"canDrag\",\n    value: function canDrag() {\n      invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n\n      try {\n        isCallingCanDrag = true;\n        return this.internalMonitor.canDragSource(this.sourceId);\n      } finally {\n        isCallingCanDrag = false;\n      }\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      if (!this.sourceId) {\n        return false;\n      }\n\n      invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n\n      try {\n        isCallingIsDragging = true;\n        return this.internalMonitor.isDraggingSource(this.sourceId);\n      } finally {\n        isCallingIsDragging = false;\n      }\n    }\n  }, {\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener, options) {\n      return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n  }, {\n    key: \"isDraggingSource\",\n    value: function isDraggingSource(sourceId) {\n      return this.internalMonitor.isDraggingSource(sourceId);\n    }\n  }, {\n    key: \"isOverTarget\",\n    value: function isOverTarget(targetId, options) {\n      return this.internalMonitor.isOverTarget(targetId, options);\n    }\n  }, {\n    key: \"getTargetIds\",\n    value: function getTargetIds() {\n      return this.internalMonitor.getTargetIds();\n    }\n  }, {\n    key: \"isSourcePublic\",\n    value: function isSourcePublic() {\n      return this.internalMonitor.isSourcePublic();\n    }\n  }, {\n    key: \"getSourceId\",\n    value: function getSourceId() {\n      return this.internalMonitor.getSourceId();\n    }\n  }, {\n    key: \"subscribeToOffsetChange\",\n    value: function subscribeToOffsetChange(listener) {\n      return this.internalMonitor.subscribeToOffsetChange(listener);\n    }\n  }, {\n    key: \"canDragSource\",\n    value: function canDragSource(sourceId) {\n      return this.internalMonitor.canDragSource(sourceId);\n    }\n  }, {\n    key: \"canDropOnTarget\",\n    value: function canDropOnTarget(targetId) {\n      return this.internalMonitor.canDropOnTarget(targetId);\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.internalMonitor.getItemType();\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.internalMonitor.getItem();\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.internalMonitor.getDropResult();\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.internalMonitor.didDrop();\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.internalMonitor.getInitialClientOffset();\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.internalMonitor.getInitialSourceClientOffset();\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return this.internalMonitor.getSourceClientOffset();\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.internalMonitor.getClientOffset();\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n  }]);\n\n  return DragSourceMonitorImpl;\n}();"]},"metadata":{},"sourceType":"module"}