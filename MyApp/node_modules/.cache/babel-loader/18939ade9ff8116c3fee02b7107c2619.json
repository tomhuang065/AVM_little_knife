{"ast":null,"code":"'use strict';\n\nmodule.exports = rest;\nrest.displayName = 'rest';\nrest.aliases = [];\n\nfunction rest(Prism) {\n  Prism.languages.rest = {\n    table: [{\n      pattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\||(?:\\+[=-]+)+\\+/\n      }\n    }, {\n      pattern: /(\\s*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\n      lookbehind: true,\n      inside: {\n        punctuation: /[=-]+/\n      }\n    }],\n    // Directive-like patterns\n    'substitution-def': {\n      pattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( +)(?! )[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [{\n      pattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\n      lookbehind: true,\n      alias: 'string',\n      inside: {\n        punctuation: /^\\[|\\]$/\n      }\n    }, {\n      pattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n      lookbehind: true,\n      alias: 'string',\n      inside: {\n        punctuation: /^_|:$/\n      }\n    }],\n    directive: {\n      pattern: /(^\\s*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [// Overlined and underlined\n    {\n      pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n      inside: {\n        punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n        important: /.+/\n      }\n    }, // Underlined only\n    {\n      pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n      lookbehind: true,\n      inside: {\n        punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n        important: /.+/\n      }\n    }],\n    hr: {\n      pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern: /(^\\s*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [{\n      pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n      lookbehind: true,\n      inside: {\n        bold: {\n          pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n          lookbehind: true\n        },\n        italic: {\n          pattern: /(^\\*).+(?=\\*$)/,\n          lookbehind: true\n        },\n        'inline-literal': {\n          pattern: /(^``).+(?=``$)/,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        role: {\n          pattern: /^:[^:]+:|:[^:]+:$/,\n          alias: 'function',\n          inside: {\n            punctuation: /^:|:$/\n          }\n        },\n        'interpreted-text': {\n          pattern: /(^`).+(?=`$)/,\n          lookbehind: true,\n          alias: 'attr-value'\n        },\n        substitution: {\n          pattern: /(^\\|).+(?=\\|$)/,\n          lookbehind: true,\n          alias: 'attr-value'\n        },\n        punctuation: /\\*\\*?|``?|\\|/\n      }\n    }],\n    link: [{\n      pattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n      alias: 'string',\n      inside: {\n        punctuation: /^\\[|\\]_$/\n      }\n    }, {\n      pattern: /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n      alias: 'string',\n      inside: {\n        punctuation: /^_?`|`$|`?_?_$/\n      }\n    }],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  };\n}","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/refractor/lang/rest.js"],"names":["module","exports","rest","displayName","aliases","Prism","languages","table","pattern","lookbehind","inside","punctuation","substitution","alias","directive","comment","title","important","hr","field","inline","bold","italic","role","link"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = rest\nrest.displayName = 'rest'\nrest.aliases = []\nfunction rest(Prism) {\n  Prism.languages.rest = {\n    table: [\n      {\n        pattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\n        }\n      },\n      {\n        pattern: /(\\s*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[=-]+/\n        }\n      }\n    ],\n    // Directive-like patterns\n    'substitution-def': {\n      pattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( +)(?! )[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [\n      {\n        pattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]$/\n        }\n      },\n      {\n        pattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^_|:$/\n        }\n      }\n    ],\n    directive: {\n      pattern: /(^\\s*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [\n      // Overlined and underlined\n      {\n        pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }, // Underlined only\n      {\n        pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }\n    ],\n    hr: {\n      pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern: /(^\\s*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [\n      {\n        pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n        lookbehind: true,\n        inside: {\n          bold: {\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /(^\\*).+(?=\\*$)/,\n            lookbehind: true\n          },\n          'inline-literal': {\n            pattern: /(^``).+(?=``$)/,\n            lookbehind: true,\n            alias: 'symbol'\n          },\n          role: {\n            pattern: /^:[^:]+:|:[^:]+:$/,\n            alias: 'function',\n            inside: {\n              punctuation: /^:|:$/\n            }\n          },\n          'interpreted-text': {\n            pattern: /(^`).+(?=`$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          substitution: {\n            pattern: /(^\\|).+(?=\\|$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\*\\*?|``?|\\|/\n        }\n      }\n    ],\n    link: [\n      {\n        pattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }\n      },\n      {\n        pattern: /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n        alias: 'string',\n        inside: {\n          punctuation: /^_?`|`$|`?_?_$/\n        }\n      }\n    ],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}