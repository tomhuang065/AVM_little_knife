{"ast":null,"code":"/*\nLanguage: Python\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\nWebsite: https://www.python.org\nCategory: common\n*/\nfunction python(hljs) {\n  const RESERVED_WORDS = ['and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', '', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal|10', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield'];\n  const BUILT_INS = ['__import__', 'abs', 'all', 'any', 'ascii', 'bin', 'bool', 'breakpoint', 'bytearray', 'bytes', 'callable', 'chr', 'classmethod', 'compile', 'complex', 'delattr', 'dict', 'dir', 'divmod', 'enumerate', 'eval', 'exec', 'filter', 'float', 'format', 'frozenset', 'getattr', 'globals', 'hasattr', 'hash', 'help', 'hex', 'id', 'input', 'int', 'isinstance', 'issubclass', 'iter', 'len', 'list', 'locals', 'map', 'max', 'memoryview', 'min', 'next', 'object', 'oct', 'open', 'ord', 'pow', 'print', 'property', 'range', 'repr', 'reversed', 'round', 'set', 'setattr', 'slice', 'sorted', 'staticmethod', 'str', 'sum', 'super', 'tuple', 'type', 'vars', 'zip'];\n  const LITERALS = ['__debug__', 'Ellipsis', 'False', 'None', 'NotImplemented', 'True'];\n  const KEYWORDS = {\n    keyword: RESERVED_WORDS.join(' '),\n    built_in: BUILT_INS.join(' '),\n    literal: LITERALS.join(' ')\n  };\n  const PROMPT = {\n    className: 'meta',\n    begin: /^(>>>|\\.\\.\\.) /\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n  const LITERAL_BRACKET = {\n    begin: /\\{\\{/,\n    relevance: 0\n  };\n  const STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [{\n      begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n      end: /'''/,\n      contains: [hljs.BACKSLASH_ESCAPE, PROMPT],\n      relevance: 10\n    }, {\n      begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n      end: /\"\"\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, PROMPT],\n      relevance: 10\n    }, {\n      begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n      end: /'''/,\n      contains: [hljs.BACKSLASH_ESCAPE, PROMPT, LITERAL_BRACKET, SUBST]\n    }, {\n      begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n      end: /\"\"\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, PROMPT, LITERAL_BRACKET, SUBST]\n    }, {\n      begin: /([uU]|[rR])'/,\n      end: /'/,\n      relevance: 10\n    }, {\n      begin: /([uU]|[rR])\"/,\n      end: /\"/,\n      relevance: 10\n    }, {\n      begin: /([bB]|[bB][rR]|[rR][bB])'/,\n      end: /'/\n    }, {\n      begin: /([bB]|[bB][rR]|[rR][bB])\"/,\n      end: /\"/\n    }, {\n      begin: /([fF][rR]|[rR][fF]|[fF])'/,\n      end: /'/,\n      contains: [hljs.BACKSLASH_ESCAPE, LITERAL_BRACKET, SUBST]\n    }, {\n      begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n      end: /\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, LITERAL_BRACKET, SUBST]\n    }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE]\n  }; // https://docs.python.org/3.9/reference/lexical_analysis.html#numeric-literals\n\n  const digitpart = '[0-9](_?[0-9])*';\n  const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [// exponentfloat, pointfloat\n    // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\n    // optionally imaginary\n    // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n    // Note: no leading \\b because floats can start with a decimal point\n    // and we don't want to mishandle e.g. `fn(.5)`,\n    // no trailing \\b for pointfloat because it can end with a decimal point\n    // and we don't want to mishandle e.g. `0..hex()`; this should be safe\n    // because both MUST contain a decimal point and so cannot be confused with\n    // the interior part of an identifier\n    {\n      begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?\\\\b`\n    }, {\n      begin: `(${pointfloat})[jJ]?`\n    }, // decinteger, bininteger, octinteger, hexinteger\n    // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\n    // optionally \"long\" in Python 2\n    // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\n    // decinteger is optionally imaginary\n    // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n    {\n      begin: '\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?\\\\b'\n    }, {\n      begin: '\\\\b0[bB](_?[01])+[lL]?\\\\b'\n    }, {\n      begin: '\\\\b0[oO](_?[0-7])+[lL]?\\\\b'\n    }, {\n      begin: '\\\\b0[xX](_?[0-9a-fA-F])+[lL]?\\\\b'\n    }, // imagnumber (digitpart-based)\n    // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n    {\n      begin: `\\\\b(${digitpart})[jJ]\\\\b`\n    }]\n  };\n  const PARAMS = {\n    className: 'params',\n    variants: [// Exclude params at functions without params\n    {\n      begin: /\\(\\s*\\)/,\n      skip: true,\n      className: null\n    }, {\n      begin: /\\(/,\n      end: /\\)/,\n      excludeBegin: true,\n      excludeEnd: true,\n      keywords: KEYWORDS,\n      contains: ['self', PROMPT, NUMBER, STRING, hljs.HASH_COMMENT_MODE]\n    }]\n  };\n  SUBST.contains = [STRING, NUMBER, PROMPT];\n  return {\n    name: 'Python',\n    aliases: ['py', 'gyp', 'ipython'],\n    keywords: KEYWORDS,\n    illegal: /(<\\/|->|\\?)|=>/,\n    contains: [PROMPT, NUMBER, // eat \"if\" prior to string so that it won't accidentally be\n    // labeled as an f-string as in:\n    {\n      begin: /\\bself\\b/\n    }, // very common convention\n    {\n      beginKeywords: \"if\",\n      relevance: 0\n    }, STRING, hljs.HASH_COMMENT_MODE, {\n      variants: [{\n        className: 'function',\n        beginKeywords: 'def'\n      }, {\n        className: 'class',\n        beginKeywords: 'class'\n      }],\n      end: /:/,\n      illegal: /[${=;\\n,]/,\n      contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS, {\n        begin: /->/,\n        endsWithParent: true,\n        keywords: 'None'\n      }]\n    }, {\n      className: 'meta',\n      begin: /^[\\t ]*@/,\n      end: /(?=#)|$/,\n      contains: [NUMBER, PARAMS, STRING]\n    }, {\n      begin: /\\b(print|exec)\\(/ // donâ€™t highlight keywords-turned-functions in Python 3\n\n    }]\n  };\n}\n\nmodule.exports = python;","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/highlight.js/lib/languages/python.js"],"names":["python","hljs","RESERVED_WORDS","BUILT_INS","LITERALS","KEYWORDS","keyword","join","built_in","literal","PROMPT","className","begin","SUBST","end","keywords","illegal","LITERAL_BRACKET","relevance","STRING","contains","BACKSLASH_ESCAPE","variants","APOS_STRING_MODE","QUOTE_STRING_MODE","digitpart","pointfloat","NUMBER","PARAMS","skip","excludeBegin","excludeEnd","HASH_COMMENT_MODE","name","aliases","beginKeywords","UNDERSCORE_TITLE_MODE","endsWithParent","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Python\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\nWebsite: https://www.python.org\nCategory: common\n*/\n\nfunction python(hljs) {\n  const RESERVED_WORDS = [\n    'and',\n    'as',\n    'assert',\n    'async',\n    'await',\n    'break',\n    'class',\n    'continue',\n    'def',\n    'del',\n    'elif',\n    'else',\n    'except',\n    'finally',\n    'for',\n    '',\n    'from',\n    'global',\n    'if',\n    'import',\n    'in',\n    'is',\n    'lambda',\n    'nonlocal|10',\n    'not',\n    'or',\n    'pass',\n    'raise',\n    'return',\n    'try',\n    'while',\n    'with',\n    'yield',\n  ];\n\n  const BUILT_INS = [\n    '__import__',\n    'abs',\n    'all',\n    'any',\n    'ascii',\n    'bin',\n    'bool',\n    'breakpoint',\n    'bytearray',\n    'bytes',\n    'callable',\n    'chr',\n    'classmethod',\n    'compile',\n    'complex',\n    'delattr',\n    'dict',\n    'dir',\n    'divmod',\n    'enumerate',\n    'eval',\n    'exec',\n    'filter',\n    'float',\n    'format',\n    'frozenset',\n    'getattr',\n    'globals',\n    'hasattr',\n    'hash',\n    'help',\n    'hex',\n    'id',\n    'input',\n    'int',\n    'isinstance',\n    'issubclass',\n    'iter',\n    'len',\n    'list',\n    'locals',\n    'map',\n    'max',\n    'memoryview',\n    'min',\n    'next',\n    'object',\n    'oct',\n    'open',\n    'ord',\n    'pow',\n    'print',\n    'property',\n    'range',\n    'repr',\n    'reversed',\n    'round',\n    'set',\n    'setattr',\n    'slice',\n    'sorted',\n    'staticmethod',\n    'str',\n    'sum',\n    'super',\n    'tuple',\n    'type',\n    'vars',\n    'zip',\n  ];\n\n  const LITERALS = [\n    '__debug__',\n    'Ellipsis',\n    'False',\n    'None',\n    'NotImplemented',\n    'True',\n  ];\n\n  const KEYWORDS = {\n    keyword: RESERVED_WORDS.join(' '),\n    built_in: BUILT_INS.join(' '),\n    literal: LITERALS.join(' ')\n  };\n\n  const PROMPT = {\n    className: 'meta',  begin: /^(>>>|\\.\\.\\.) /\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/, end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n\n  const LITERAL_BRACKET = {\n    begin: /\\{\\{/,\n    relevance: 0\n  };\n\n  const STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/, end: /'''/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/, end: /\"\"\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'''/, end: /'''/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT, LITERAL_BRACKET, SUBST]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/, end: /\"\"\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT, LITERAL_BRACKET, SUBST]\n      },\n      {\n        begin: /([uU]|[rR])'/, end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[rR])\"/, end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])'/, end: /'/\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])\"/, end: /\"/\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'/, end: /'/,\n        contains: [hljs.BACKSLASH_ESCAPE, LITERAL_BRACKET, SUBST]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"/, end: /\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, LITERAL_BRACKET, SUBST]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#numeric-literals\n  const digitpart = '[0-9](_?[0-9])*';\n  const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\n  const NUMBER = {\n    className: 'number', relevance: 0,\n    variants: [\n      // exponentfloat, pointfloat\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\n      // optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      // Note: no leading \\b because floats can start with a decimal point\n      // and we don't want to mishandle e.g. `fn(.5)`,\n      // no trailing \\b for pointfloat because it can end with a decimal point\n      // and we don't want to mishandle e.g. `0..hex()`; this should be safe\n      // because both MUST contain a decimal point and so cannot be confused with\n      // the interior part of an identifier\n      { begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?\\\\b` },\n      { begin: `(${pointfloat})[jJ]?` },\n\n      // decinteger, bininteger, octinteger, hexinteger\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\n      // optionally \"long\" in Python 2\n      // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\n      // decinteger is optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      { begin: '\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?\\\\b' },\n      { begin: '\\\\b0[bB](_?[01])+[lL]?\\\\b' },\n      { begin: '\\\\b0[oO](_?[0-7])+[lL]?\\\\b' },\n      { begin: '\\\\b0[xX](_?[0-9a-fA-F])+[lL]?\\\\b' },\n\n      // imagnumber (digitpart-based)\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      { begin: `\\\\b(${digitpart})[jJ]\\\\b` },\n    ]\n  };\n\n  const PARAMS = {\n    className: 'params',\n    variants: [\n      // Exclude params at functions without params\n      {begin: /\\(\\s*\\)/, skip: true, className: null },\n      {\n        begin: /\\(/, end: /\\)/, excludeBegin: true, excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: ['self', PROMPT, NUMBER, STRING, hljs.HASH_COMMENT_MODE],\n      },\n    ],\n  };\n  SUBST.contains = [STRING, NUMBER, PROMPT];\n\n  return {\n    name: 'Python',\n    aliases: ['py', 'gyp', 'ipython'],\n    keywords: KEYWORDS,\n    illegal: /(<\\/|->|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      // eat \"if\" prior to string so that it won't accidentally be\n      // labeled as an f-string as in:\n      { begin: /\\bself\\b/, }, // very common convention\n      { beginKeywords: \"if\", relevance: 0 },\n      STRING,\n      hljs.HASH_COMMENT_MODE,\n      {\n        variants: [\n          {className: 'function', beginKeywords: 'def'},\n          {className: 'class', beginKeywords: 'class'}\n        ],\n        end: /:/,\n        illegal: /[${=;\\n,]/,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          PARAMS,\n          {\n            begin: /->/, endsWithParent: true,\n            keywords: 'None'\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/, end: /(?=#)|$/,\n        contains: [NUMBER, PARAMS, STRING]\n      },\n      {\n        begin: /\\b(print|exec)\\(/ // donâ€™t highlight keywords-turned-functions in Python 3\n      }\n    ]\n  };\n}\n\nmodule.exports = python;\n"]},"metadata":{},"sourceType":"script"}