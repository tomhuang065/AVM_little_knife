{"ast":null,"code":"'use strict';\n\nmodule.exports = markup;\nmarkup.displayName = 'markup';\nmarkup.aliases = ['html', 'mathml', 'svg', 'xml', 'ssml', 'atom', 'rss'];\n\nfunction markup(Prism) {\n  Prism.languages.markup = {\n    comment: /<!--[\\s\\S]*?-->/,\n    prolog: /<\\?[\\s\\S]+?\\?>/,\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n    tag: {\n      pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [{\n      pattern: /&[\\da-z]{1,8};/i,\n      alias: 'named-entity'\n    }, /&#x?[\\da-f]{1,8};/i]\n  };\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&');\n    }\n  });\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {};\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      };\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      };\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      };\n      var def = {};\n      def[tagName] = {\n        pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n          return tagName;\n        }), 'i'),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      };\n      Prism.languages.insertBefore('markup', 'cdata', def);\n    }\n  });\n  Prism.languages.html = Prism.languages.markup;\n  Prism.languages.mathml = Prism.languages.markup;\n  Prism.languages.svg = Prism.languages.markup;\n  Prism.languages.xml = Prism.languages.extend('markup', {});\n  Prism.languages.ssml = Prism.languages.xml;\n  Prism.languages.atom = Prism.languages.xml;\n  Prism.languages.rss = Prism.languages.xml;\n}","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/refractor/lang/markup.js"],"names":["module","exports","markup","displayName","aliases","Prism","languages","comment","prolog","doctype","pattern","greedy","inside","lookbehind","string","punctuation","name","cdata","tag","namespace","alias","entity","hooks","add","env","type","attributes","content","value","replace","Object","defineProperty","addInlined","tagName","lang","includedCdataInside","def","RegExp","source","insertBefore","html","mathml","svg","xml","extend","ssml","atom","rss"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = markup\nmarkup.displayName = 'markup'\nmarkup.aliases = ['html', 'mathml', 'svg', 'xml', 'ssml', 'atom', 'rss']\nfunction markup(Prism) {\n  Prism.languages.markup = {\n    comment: /<!--[\\s\\S]*?-->/,\n    prolog: /<\\?[\\s\\S]+?\\?>/,\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n    tag: {\n      pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [\n              {\n                pattern: /^=/,\n                alias: 'attr-equals'\n              },\n              /\"|'/\n            ]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [\n      {\n        pattern: /&[\\da-z]{1,8};/i,\n        alias: 'named-entity'\n      },\n      /&#x?[\\da-f]{1,8};/i\n    ]\n  }\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.markup['entity']\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside =\n    Prism.languages.markup // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {}\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      }\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      }\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      }\n      var def = {}\n      def[tagName] = {\n        pattern: RegExp(\n          /(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\n            /__/g,\n            function () {\n              return tagName\n            }\n          ),\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      }\n      Prism.languages.insertBefore('markup', 'cdata', def)\n    }\n  })\n  Prism.languages.html = Prism.languages.markup\n  Prism.languages.mathml = Prism.languages.markup\n  Prism.languages.svg = Prism.languages.markup\n  Prism.languages.xml = Prism.languages.extend('markup', {})\n  Prism.languages.ssml = Prism.languages.xml\n  Prism.languages.atom = Prism.languages.xml\n  Prism.languages.rss = Prism.languages.xml\n}\n"]},"metadata":{},"sourceType":"script"}