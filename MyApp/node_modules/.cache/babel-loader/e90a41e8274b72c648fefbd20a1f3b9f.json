{"ast":null,"code":"/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\n\n\nfunction concat(...args) {\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n/*\nLanguage: Perl\nAuthor: Peter Leonov <gojpeg@yandex.ru>\nWebsite: https://www.perl.org\nCategory: common\n*/\n\n/** @type LanguageFn */\n\n\nfunction perl(hljs) {\n  // https://perldoc.perl.org/perlre#Modifiers\n  const REGEX_MODIFIERS = /[dualxmsipn]{0,12}/; // aa and xx are valid, making max length 12\n\n  const PERL_KEYWORDS = {\n    $pattern: /[\\w.]+/,\n    keyword: 'getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ' + 'ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime ' + 'readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qq ' + 'fileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent ' + 'shutdown dump chomp connect getsockname die socketpair close flock exists index shmget ' + 'sub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr ' + 'unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 ' + 'getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline ' + 'endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand ' + 'mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink ' + 'getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr ' + 'untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link ' + 'getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller ' + 'lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and ' + 'sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 ' + 'chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach ' + 'tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedir ' + 'ioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe ' + 'atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when'\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{',\n    end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  const METHOD = {\n    begin: /->\\{/,\n    end: /\\}/ // contains defined later\n\n  };\n  const VAR = {\n    variants: [{\n      begin: /\\$\\d/\n    }, {\n      begin: concat(/[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/, // negative look-ahead tries to avoid matching patterns that are not\n      // Perl at all like $ident$, @ident@, etc.\n      `(?![A-Za-z])(?![@$%])`)\n    }, {\n      begin: /[$%@][^\\s\\w{]/,\n      relevance: 0\n    }]\n  };\n  const STRING_CONTAINS = [hljs.BACKSLASH_ESCAPE, SUBST, VAR];\n  const PERL_DEFAULT_CONTAINS = [VAR, hljs.HASH_COMMENT_MODE, hljs.COMMENT(/^=\\w/, /=cut/, {\n    endsWithParent: true\n  }), METHOD, {\n    className: 'string',\n    contains: STRING_CONTAINS,\n    variants: [{\n      begin: 'q[qwxr]?\\\\s*\\\\(',\n      end: '\\\\)',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*\\\\[',\n      end: '\\\\]',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*\\\\{',\n      end: '\\\\}',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*\\\\|',\n      end: '\\\\|',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*<',\n      end: '>',\n      relevance: 5\n    }, {\n      begin: 'qw\\\\s+q',\n      end: 'q',\n      relevance: 5\n    }, {\n      begin: '\\'',\n      end: '\\'',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: '\"',\n      end: '\"'\n    }, {\n      begin: '`',\n      end: '`',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\\{\\w+\\}/,\n      contains: [],\n      relevance: 0\n    }, {\n      begin: '-?\\\\w+\\\\s*=>',\n      contains: [],\n      relevance: 0\n    }]\n  }, {\n    className: 'number',\n    begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n    relevance: 0\n  }, {\n    // regexp container\n    begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n    keywords: 'split return print reverse grep',\n    relevance: 0,\n    contains: [hljs.HASH_COMMENT_MODE, {\n      className: 'regexp',\n      begin: concat(/(s|tr|y)/, /\\//, /(\\\\.|[^\\\\\\/])*/, /\\//, /(\\\\.|[^\\\\\\/])*/, /\\//, REGEX_MODIFIERS),\n      relevance: 10\n    }, {\n      className: 'regexp',\n      begin: /(m|qr)?\\//,\n      end: concat(/\\//, REGEX_MODIFIERS),\n      contains: [hljs.BACKSLASH_ESCAPE],\n      relevance: 0 // allows empty \"//\" which is a common comment delimiter in other languages\n\n    }]\n  }, {\n    className: 'function',\n    beginKeywords: 'sub',\n    end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n    excludeEnd: true,\n    relevance: 5,\n    contains: [hljs.TITLE_MODE]\n  }, {\n    begin: '-\\\\w\\\\b',\n    relevance: 0\n  }, {\n    begin: \"^__DATA__$\",\n    end: \"^__END__$\",\n    subLanguage: 'mojolicious',\n    contains: [{\n      begin: \"^@@.*\",\n      end: \"$\",\n      className: \"comment\"\n    }]\n  }];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n  return {\n    name: 'Perl',\n    aliases: ['pl', 'pm'],\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n}\n\nmodule.exports = perl;","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/highlight.js/lib/languages/perl.js"],"names":["source","re","concat","args","joined","map","x","join","perl","hljs","REGEX_MODIFIERS","PERL_KEYWORDS","$pattern","keyword","SUBST","className","begin","end","keywords","METHOD","VAR","variants","relevance","STRING_CONTAINS","BACKSLASH_ESCAPE","PERL_DEFAULT_CONTAINS","HASH_COMMENT_MODE","COMMENT","endsWithParent","contains","RE_STARTERS_RE","beginKeywords","excludeEnd","TITLE_MODE","subLanguage","name","aliases","module","exports"],"mappings":"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","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Perl\nAuthor: Peter Leonov <gojpeg@yandex.ru>\nWebsite: https://www.perl.org\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction perl(hljs) {\n  // https://perldoc.perl.org/perlre#Modifiers\n  const REGEX_MODIFIERS = /[dualxmsipn]{0,12}/; // aa and xx are valid, making max length 12\n  const PERL_KEYWORDS = {\n    $pattern: /[\\w.]+/,\n    keyword: 'getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ' +\n    'ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime ' +\n    'readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qq ' +\n    'fileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent ' +\n    'shutdown dump chomp connect getsockname die socketpair close flock exists index shmget ' +\n    'sub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr ' +\n    'unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 ' +\n    'getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline ' +\n    'endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand ' +\n    'mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink ' +\n    'getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr ' +\n    'untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link ' +\n    'getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller ' +\n    'lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and ' +\n    'sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 ' +\n    'chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach ' +\n    'tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedir ' +\n    'ioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe ' +\n    'atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when'\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{',\n    end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  const METHOD = {\n    begin: /->\\{/,\n    end: /\\}/\n    // contains defined later\n  };\n  const VAR = {\n    variants: [\n      {\n        begin: /\\$\\d/\n      },\n      {\n        begin: concat(\n          /[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\n          // negative look-ahead tries to avoid matching patterns that are not\n          // Perl at all like $ident$, @ident@, etc.\n          `(?![A-Za-z])(?![@$%])`\n        )\n      },\n      {\n        begin: /[$%@][^\\s\\w{]/,\n        relevance: 0\n      }\n    ]\n  };\n  const STRING_CONTAINS = [\n    hljs.BACKSLASH_ESCAPE,\n    SUBST,\n    VAR\n  ];\n  const PERL_DEFAULT_CONTAINS = [\n    VAR,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT(\n      /^=\\w/,\n      /=cut/,\n      {\n        endsWithParent: true\n      }\n    ),\n    METHOD,\n    {\n      className: 'string',\n      contains: STRING_CONTAINS,\n      variants: [\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\(',\n          end: '\\\\)',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\[',\n          end: '\\\\]',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\{',\n          end: '\\\\}',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\|',\n          end: '\\\\|',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*<',\n          end: '>',\n          relevance: 5\n        },\n        {\n          begin: 'qw\\\\s+q',\n          end: 'q',\n          relevance: 5\n        },\n        {\n          begin: '\\'',\n          end: '\\'',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: '\"',\n          end: '\"'\n        },\n        {\n          begin: '`',\n          end: '`',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: /\\{\\w+\\}/,\n          contains: [],\n          relevance: 0\n        },\n        {\n          begin: '-?\\\\w+\\\\s*=>',\n          contains: [],\n          relevance: 0\n        }\n      ]\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    { // regexp container\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n      keywords: 'split return print reverse grep',\n      relevance: 0,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          begin: concat(\n            /(s|tr|y)/,\n            /\\//,\n            /(\\\\.|[^\\\\\\/])*/,\n            /\\//,\n            /(\\\\.|[^\\\\\\/])*/,\n            /\\//,\n            REGEX_MODIFIERS\n          ),\n          relevance: 10\n        },\n        {\n          className: 'regexp',\n          begin: /(m|qr)?\\//,\n          end: concat(\n            /\\//,\n            REGEX_MODIFIERS\n          ),\n          contains: [ hljs.BACKSLASH_ESCAPE ],\n          relevance: 0 // allows empty \"//\" which is a common comment delimiter in other languages\n        }\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'sub',\n      end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n      excludeEnd: true,\n      relevance: 5,\n      contains: [ hljs.TITLE_MODE ]\n    },\n    {\n      begin: '-\\\\w\\\\b',\n      relevance: 0\n    },\n    {\n      begin: \"^__DATA__$\",\n      end: \"^__END__$\",\n      subLanguage: 'mojolicious',\n      contains: [\n        {\n          begin: \"^@@.*\",\n          end: \"$\",\n          className: \"comment\"\n        }\n      ]\n    }\n  ];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\n  return {\n    name: 'Perl',\n    aliases: [\n      'pl',\n      'pm'\n    ],\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n}\n\nmodule.exports = perl;\n"]},"metadata":{},"sourceType":"script"}