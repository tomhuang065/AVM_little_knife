{"ast":null,"code":"'use strict';\n\nmodule.exports = textile;\ntextile.displayName = 'textile';\ntextile.aliases = [];\n\nfunction textile(Prism) {\n  ;\n\n  (function (Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source; // Opening and closing parentheses which are not a modifier\n    // This pattern is necessary to prevent exponential backtracking\n\n    var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source;\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n\n    function withModifier(source, flags) {\n      return RegExp(source.replace(/<MOD>/g, function () {\n        return '(?:' + modifierRegex + ')';\n      }).replace(/<PAR>/g, function () {\n        return '(?:' + parenthesesRegex + ')';\n      }), flags || '');\n    }\n\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^)]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    };\n    var textile = Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n            inside: {\n              modifier: {\n                pattern: withModifier(/(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n            inside: {\n              modifier: {\n                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: withModifier(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/.source, 'm'),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: withModifier(/(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            pattern: withModifier(/(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/.source),\n            lookbehind: true,\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n              // *bold*, **bold**\n              bold: {\n                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(/(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            pattern: withModifier(/\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source),\n            inside: {\n              text: {\n                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(/(^\")<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: withModifier(/!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/.source),\n            inside: {\n              source: {\n                pattern: withModifier(/(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/.source),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^)]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:TM|R|C)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    });\n    var phraseInside = textile['phrase'].inside;\n    var nestedPatterns = {\n      inline: phraseInside['inline'],\n      link: phraseInside['link'],\n      image: phraseInside['image'],\n      footnote: phraseInside['footnote'],\n      acronym: phraseInside['acronym'],\n      mark: phraseInside['mark']\n    }; // Only allow alpha-numeric HTML tags, not XML tags\n\n    textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i; // Allow some nesting\n\n    var phraseInlineInside = phraseInside['inline'].inside;\n    phraseInlineInside['bold'].inside = nestedPatterns;\n    phraseInlineInside['italic'].inside = nestedPatterns;\n    phraseInlineInside['inserted'].inside = nestedPatterns;\n    phraseInlineInside['deleted'].inside = nestedPatterns;\n    phraseInlineInside['span'].inside = nestedPatterns; // Allow some styles inside table cells\n\n    var phraseTableInside = phraseInside['table'].inside;\n    phraseTableInside['inline'] = nestedPatterns['inline'];\n    phraseTableInside['link'] = nestedPatterns['link'];\n    phraseTableInside['image'] = nestedPatterns['image'];\n    phraseTableInside['footnote'] = nestedPatterns['footnote'];\n    phraseTableInside['acronym'] = nestedPatterns['acronym'];\n    phraseTableInside['mark'] = nestedPatterns['mark'];\n  })(Prism);\n}","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/refractor/lang/textile.js"],"names":["module","exports","textile","displayName","aliases","Prism","modifierRegex","source","parenthesesRegex","withModifier","flags","RegExp","replace","modifierTokens","css","pattern","inside","rest","languages","lookbehind","alias","lang","punctuation","extend","phrase","modifier","tag","list","table","inline","bold","italic","cite","code","inserted","deleted","span","string","url","link","text","image","footnote","acronym","comment","mark","phraseInside","nestedPatterns","phraseInlineInside","phraseTableInside"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = textile\ntextile.displayName = 'textile'\ntextile.aliases = []\nfunction textile(Prism) {\n  ;(function (Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source // Opening and closing parentheses which are not a modifier\n    // This pattern is necessary to prevent exponential backtracking\n    var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function withModifier(source, flags) {\n      return RegExp(\n        source\n          .replace(/<MOD>/g, function () {\n            return '(?:' + modifierRegex + ')'\n          })\n          .replace(/<PAR>/g, function () {\n            return '(?:' + parenthesesRegex + ')'\n          }),\n        flags || ''\n      )\n    }\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^)]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    }\n    var textile = (Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n            inside: {\n              modifier: {\n                pattern: withModifier(\n                  /(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n            inside: {\n              modifier: {\n                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: withModifier(\n              /^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/\n                .source,\n              'm'\n            ),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: withModifier(\n                  /(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/\n                    .source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            pattern: withModifier(\n              /(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/\n                .source\n            ),\n            lookbehind: true,\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n              // *bold*, **bold**\n              bold: {\n                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(\n                  /(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            pattern: withModifier(\n              /\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source\n            ),\n            inside: {\n              text: {\n                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(/(^\")<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: withModifier(\n              /!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/\n                .source\n            ),\n            inside: {\n              source: {\n                pattern: withModifier(\n                  /(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/\n                    .source\n                ),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^)]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:TM|R|C)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    }))\n    var phraseInside = textile['phrase'].inside\n    var nestedPatterns = {\n      inline: phraseInside['inline'],\n      link: phraseInside['link'],\n      image: phraseInside['image'],\n      footnote: phraseInside['footnote'],\n      acronym: phraseInside['acronym'],\n      mark: phraseInside['mark']\n    } // Only allow alpha-numeric HTML tags, not XML tags\n    textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i // Allow some nesting\n    var phraseInlineInside = phraseInside['inline'].inside\n    phraseInlineInside['bold'].inside = nestedPatterns\n    phraseInlineInside['italic'].inside = nestedPatterns\n    phraseInlineInside['inserted'].inside = nestedPatterns\n    phraseInlineInside['deleted'].inside = nestedPatterns\n    phraseInlineInside['span'].inside = nestedPatterns // Allow some styles inside table cells\n    var phraseTableInside = phraseInside['table'].inside\n    phraseTableInside['inline'] = nestedPatterns['inline']\n    phraseTableInside['link'] = nestedPatterns['link']\n    phraseTableInside['image'] = nestedPatterns['image']\n    phraseTableInside['footnote'] = nestedPatterns['footnote']\n    phraseTableInside['acronym'] = nestedPatterns['acronym']\n    phraseTableInside['mark'] = nestedPatterns['mark']\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}