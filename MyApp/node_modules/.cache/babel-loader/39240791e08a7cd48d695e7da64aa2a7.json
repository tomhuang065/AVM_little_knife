{"ast":null,"code":"'use strict';\n\nmodule.exports = twig;\ntwig.displayName = 'twig';\ntwig.aliases = [];\n\nfunction twig(Prism) {\n  Prism.languages.twig = {\n    comment: /\\{#[\\s\\S]*?#\\}/,\n    tag: {\n      pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n      inside: {\n        ld: {\n          pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n          inside: {\n            punctuation: /^(?:\\{\\{|\\{%)-?/,\n            keyword: /\\w+/\n          }\n        },\n        rd: {\n          pattern: /-?(?:%\\}|\\}\\})$/,\n          inside: {\n            punctuation: /.+/\n          }\n        },\n        string: {\n          pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          inside: {\n            punctuation: /^['\"]|['\"]$/\n          }\n        },\n        keyword: /\\b(?:even|if|odd)\\b/,\n        boolean: /\\b(?:true|false|null)\\b/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        operator: [{\n          pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n          lookbehind: true\n        }, /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],\n        property: /\\b[a-zA-Z_]\\w*\\b/,\n        punctuation: /[()\\[\\]{}:.,]/\n      }\n    },\n    // The rest can be parsed as HTML\n    other: {\n      // We want non-blank matches\n      pattern: /\\S(?:[\\s\\S]*\\S)?/,\n      inside: Prism.languages.markup\n    }\n  };\n}","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/refractor/lang/twig.js"],"names":["module","exports","twig","displayName","aliases","Prism","languages","comment","tag","pattern","inside","ld","punctuation","keyword","rd","string","boolean","number","operator","lookbehind","property","other","markup"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;;AACA,SAASF,IAAT,CAAcG,KAAd,EAAqB;AACnBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,GAAuB;AACrBK,IAAAA,OAAO,EAAE,gBADY;AAErBC,IAAAA,GAAG,EAAE;AACHC,MAAAA,OAAO,EAAE,iCADN;AAEHC,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAE;AACFF,UAAAA,OAAO,EAAE,yBADP;AAEFC,UAAAA,MAAM,EAAE;AACNE,YAAAA,WAAW,EAAE,iBADP;AAENC,YAAAA,OAAO,EAAE;AAFH;AAFN,SADE;AAQNC,QAAAA,EAAE,EAAE;AACFL,UAAAA,OAAO,EAAE,iBADP;AAEFC,UAAAA,MAAM,EAAE;AACNE,YAAAA,WAAW,EAAE;AADP;AAFN,SARE;AAcNG,QAAAA,MAAM,EAAE;AACNN,UAAAA,OAAO,EAAE,iCADH;AAENC,UAAAA,MAAM,EAAE;AACNE,YAAAA,WAAW,EAAE;AADP;AAFF,SAdF;AAoBNC,QAAAA,OAAO,EAAE,qBApBH;AAqBNG,QAAAA,OAAO,EAAE,yBArBH;AAsBNC,QAAAA,MAAM,EAAE,8DAtBF;AAuBNC,QAAAA,QAAQ,EAAE,CACR;AACET,UAAAA,OAAO,EAAE,uFADX;AAEEU,UAAAA,UAAU,EAAE;AAFd,SADQ,EAKR,qCALQ,CAvBJ;AA8BNC,QAAAA,QAAQ,EAAE,kBA9BJ;AA+BNR,QAAAA,WAAW,EAAE;AA/BP;AAFL,KAFgB;AAsCrB;AACAS,IAAAA,KAAK,EAAE;AACL;AACAZ,MAAAA,OAAO,EAAE,kBAFJ;AAGLC,MAAAA,MAAM,EAAEL,KAAK,CAACC,SAAN,CAAgBgB;AAHnB;AAvCc,GAAvB;AA6CD","sourcesContent":["'use strict'\n\nmodule.exports = twig\ntwig.displayName = 'twig'\ntwig.aliases = []\nfunction twig(Prism) {\n  Prism.languages.twig = {\n    comment: /\\{#[\\s\\S]*?#\\}/,\n    tag: {\n      pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n      inside: {\n        ld: {\n          pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n          inside: {\n            punctuation: /^(?:\\{\\{|\\{%)-?/,\n            keyword: /\\w+/\n          }\n        },\n        rd: {\n          pattern: /-?(?:%\\}|\\}\\})$/,\n          inside: {\n            punctuation: /.+/\n          }\n        },\n        string: {\n          pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          inside: {\n            punctuation: /^['\"]|['\"]$/\n          }\n        },\n        keyword: /\\b(?:even|if|odd)\\b/,\n        boolean: /\\b(?:true|false|null)\\b/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        operator: [\n          {\n            pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n            lookbehind: true\n          },\n          /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n        ],\n        property: /\\b[a-zA-Z_]\\w*\\b/,\n        punctuation: /[()\\[\\]{}:.,]/\n      }\n    },\n    // The rest can be parsed as HTML\n    other: {\n      // We want non-blank matches\n      pattern: /\\S(?:[\\s\\S]*\\S)?/,\n      inside: Prism.languages.markup\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}