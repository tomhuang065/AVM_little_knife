{"ast":null,"code":"'use strict';\n\nmodule.exports = javascript;\njavascript.displayName = 'javascript';\njavascript.aliases = ['js'];\n\nfunction javascript(Prism) {\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [Prism.languages.clike['class-name'], {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n      lookbehind: true\n    }],\n    keyword: [{\n      pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n      lookbehind: true\n    }],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    number: /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n    operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n  });\n  Prism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-flags': /[a-z]+$/,\n        'regex-delimiter': /^\\/|\\/$/\n      }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [{\n      pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  });\n  Prism.languages.insertBefore('javascript', 'string', {\n    'template-string': {\n      pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\${|}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  });\n\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript');\n  }\n\n  Prism.languages.js = Prism.languages.javascript;\n}","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/refractor/lang/javascript.js"],"names":["module","exports","javascript","displayName","aliases","Prism","languages","extend","clike","pattern","lookbehind","keyword","function","number","operator","insertBefore","regex","greedy","inside","alias","parameter","constant","interpolation","rest","string","markup","tag","addInlined","js"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = javascript\njavascript.displayName = 'javascript'\njavascript.aliases = ['js']\nfunction javascript(Prism) {\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [\n      Prism.languages.clike['class-name'],\n      {\n        pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n        lookbehind: true\n      }\n    ],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    number: /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n    operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n  })\n  Prism.languages.javascript[\n    'class-name'\n  ][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-flags': /[a-z]+$/,\n        'regex-delimiter': /^\\/|\\/$/\n      }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [\n      {\n        pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    ],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  })\n  Prism.languages.insertBefore('javascript', 'string', {\n    'template-string': {\n      pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\${|}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript')\n  }\n  Prism.languages.js = Prism.languages.javascript\n}\n"]},"metadata":{},"sourceType":"script"}