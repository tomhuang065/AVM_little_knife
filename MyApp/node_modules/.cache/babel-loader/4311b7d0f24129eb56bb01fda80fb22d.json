{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/src/pages/login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, CircularProgress, Typography, Button, Tabs, Tab, TextField, Fade } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\"; // styles\n\nimport useStyles from \"./styles\"; // logo\n\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\"; // context\n\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  _s();\n\n  var classes = useStyles(); // global\n\n  var userDispatch = useUserDispatch(); // local\n\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"admin@flatlogic.com\");\n  var [passwordValue, setPasswordValue] = useState(\"password\");\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.logotypeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        className: classes.logotypeImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.logotypeText,\n        children: \"\\u5435\\u67B6\\u8AD6\\u58C7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTabId,\n          onChange: (e, id) => setActiveTabId(id),\n          indicatorColor: \"primary\",\n          textColor: \"primary\",\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Login\",\n            classes: {\n              root: classes.tab\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"New User\",\n            classes: {\n              root: classes.tab\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), activeTabId === 0 && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h1\",\n            className: classes.subGreeting,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '117px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Fade, {\n            in: error,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"secondary\",\n              className: classes.errorMessage,\n              children: \"Something is wrong with your login or password :(\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: loginValue,\n            onChange: e => setLoginValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"Email Adress\",\n            type: \"email\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: passwordValue,\n            onChange: e => setPasswordValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"Password\",\n            type: \"password\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formButtons,\n            children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 26,\n              className: classes.loginLoader\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loginValue.length === 0 || passwordValue.length === 0,\n              onClick: () => loginUser(userDispatch, loginValue, passwordValue, props.history, setIsLoading, setError),\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"large\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), activeTabId === 1 && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h1\",\n            className: classes.subGreeting,\n            children: \"Create account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Fade, {\n            in: error,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"secondary\",\n              className: classes.errorMessage,\n              children: \"Something is wrong with your login or password :(\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"name\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: nameValue,\n            onChange: e => setNameValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"Full Name\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: loginValue,\n            onChange: e => setLoginValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"Email Adress\",\n            type: \"email\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: passwordValue,\n            onChange: e => setPasswordValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"Password\",\n            type: \"password\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.creatingButtonContainer,\n            children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 26\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => loginUser(userDispatch, loginValue, passwordValue, props.history, setIsLoading, setError),\n              disabled: loginValue.length === 0 || passwordValue.length === 0 || nameValue.length === 0,\n              size: \"large\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              className: classes.createAccountButton,\n              children: \"Create your account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"MIfaEWls2T25FRftcmByUMoe5Iw=\", false, function () {\n  return [useStyles, useUserDispatch];\n});\n\n_c = Login;\nexport default _c2 = withRouter(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/src/pages/login/Login.js"],"names":["React","useState","Grid","CircularProgress","Typography","Button","Tabs","Tab","TextField","Fade","withRouter","classnames","useStyles","useUserDispatch","loginUser","Login","props","classes","userDispatch","isLoading","setIsLoading","error","setError","activeTabId","setActiveTabId","nameValue","setNameValue","loginValue","setLoginValue","passwordValue","setPasswordValue","container","logotypeContainer","logo","logotypeImage","logotypeText","formContainer","form","e","id","root","tab","subGreeting","height","errorMessage","underline","textFieldUnderline","input","textField","target","value","formButtons","loginLoader","length","history","creatingButtonContainer","createAccountButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\n\n// context\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"admin@flatlogic.com\");\n  var [passwordValue, setPasswordValue] = useState(\"password\");\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n        <Typography className={classes.logotypeText}>吵架論壇</Typography>\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h1\" className={classes.subGreeting}>\n                Login\n              </Typography>\n              <div style={{height:'117px'}}></div>\n              {/* <Button size=\"large\" className={classes.googleButton}>\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button> */}\n              {/* <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div> */}\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || passwordValue.length === 0\n                    }\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                  >\n                    Login\n                  </Button>\n                )}\n                {/* <Button\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.forgetButton}\n                >\n                  Forget Password\n                </Button> */}\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              {/* <Typography variant=\"h1\" className={classes.greeting}>\n                Welcome!\n              </Typography> */}\n              <Typography variant=\"h1\" className={classes.subGreeting}>\n                Create account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={e => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                  <Button\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    disabled={\n                      loginValue.length === 0 ||\n                      passwordValue.length === 0 ||\n                      nameValue.length === 0\n                    }\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    className={classes.createAccountButton}\n                  >\n                    Create your account\n                  </Button>\n                )}\n              </div>\n              {/* <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div>\n              <Button\n                size=\"large\"\n                className={classnames(\n                  classes.googleButton,\n                  classes.googleButtonCreating,\n                )}\n              >\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button> */}\n            </React.Fragment>\n          )}\n        </div>\n        {/* <Typography color=\"primary\" className={classes.copyright}>\n        © 2014-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://flatlogic.com\" rel=\"noopener noreferrer\" target=\"_blank\">Flatlogic</a>, LLC. All rights reserved.\n        </Typography> */}\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}