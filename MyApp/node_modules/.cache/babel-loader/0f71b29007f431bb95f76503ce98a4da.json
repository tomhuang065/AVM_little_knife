{"ast":null,"code":"/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\n\n\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\n\n\nfunction concat(...args) {\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n/*\nLanguage: Ruby\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\nWebsite: https://www.ruby-lang.org/\nAuthor: Anton Kovalyov <anton@kovalyov.net>\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\nCategory: common\n*/\n\n\nfunction ruby(hljs) {\n  var RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)';\n  var RUBY_KEYWORDS = {\n    keyword: 'and then defined module in return redo if BEGIN retry end for self when ' + 'next until do begin unless END rescue else break undef not super class case ' + 'require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor ' + '__FILE__',\n    built_in: 'proc lambda',\n    literal: 'true false nil'\n  };\n  var YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  var IRB_OBJECT = {\n    begin: '#<',\n    end: '>'\n  };\n  var COMMENT_MODES = [hljs.COMMENT('#', '$', {\n    contains: [YARDOCTAG]\n  }), hljs.COMMENT('^=begin', '^=end', {\n    contains: [YARDOCTAG],\n    relevance: 10\n  }), hljs.COMMENT('^__END__', '\\\\n$')];\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: RUBY_KEYWORDS\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [{\n      begin: /'/,\n      end: /'/\n    }, {\n      begin: /\"/,\n      end: /\"/\n    }, {\n      begin: /`/,\n      end: /`/\n    }, {\n      begin: /%[qQwWx]?\\(/,\n      end: /\\)/\n    }, {\n      begin: /%[qQwWx]?\\[/,\n      end: /\\]/\n    }, {\n      begin: /%[qQwWx]?\\{/,\n      end: /\\}/\n    }, {\n      begin: /%[qQwWx]?</,\n      end: />/\n    }, {\n      begin: /%[qQwWx]?\\//,\n      end: /\\//\n    }, {\n      begin: /%[qQwWx]?%/,\n      end: /%/\n    }, {\n      begin: /%[qQwWx]?-/,\n      end: /-/\n    }, {\n      begin: /%[qQwWx]?\\|/,\n      end: /\\|/\n    }, {\n      // \\B in the beginning suppresses recognition of ?-sequences where ?\n      // is the last character of a preceding identifier, as in: `func?4`\n      begin: /\\B\\?(\\\\\\d{1,3}|\\\\x[A-Fa-f0-9]{1,2}|\\\\u[A-Fa-f0-9]{4}|\\\\?\\S)\\b/\n    }, {\n      // heredocs\n      begin: /<<[-~]?'?(\\w+)\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/,\n      returnBegin: true,\n      contains: [{\n        begin: /<<[-~]?'?/\n      }, hljs.END_SAME_AS_BEGIN({\n        begin: /(\\w+)/,\n        end: /(\\w+)/,\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      })]\n    }]\n  }; // Ruby syntax is underdocumented, but this grammar seems to be accurate\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\n\n  var decimal = '[1-9](_?[0-9])*|0';\n  var digits = '[0-9](_?[0-9])*';\n  var NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [// decimal integer/float, optionally exponential or rational, optionally imaginary\n    {\n      begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b`\n    }, // explicit decimal/binary/octal/hexadecimal integer,\n    // optionally rational and/or imaginary\n    {\n      begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\"\n    }, {\n      begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\"\n    }, {\n      begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\"\n    }, {\n      begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\"\n    }, // 0-prefixed implicit octal integer, optionally rational and/or imaginary\n    {\n      begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\"\n    }]\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(',\n    end: '\\\\)',\n    endsParent: true,\n    keywords: RUBY_KEYWORDS\n  };\n  var RUBY_DEFAULT_CONTAINS = [STRING, {\n    className: 'class',\n    beginKeywords: 'class module',\n    end: '$|;',\n    illegal: /=/,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|!)?'\n    }), {\n      begin: '<\\\\s*',\n      contains: [{\n        begin: '(' + hljs.IDENT_RE + '::)?' + hljs.IDENT_RE\n      }]\n    }].concat(COMMENT_MODES)\n  }, {\n    className: 'function',\n    // def method_name(\n    // def method_name;\n    // def method_name (end of line)\n    begin: concat(/def\\s*/, lookahead(RUBY_METHOD_RE + \"\\\\s*(\\\\(|;|$)\")),\n    keywords: \"def\",\n    end: '$|;',\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: RUBY_METHOD_RE\n    }), PARAMS].concat(COMMENT_MODES)\n  }, {\n    // swallow namespace qualifiers before symbols\n    begin: hljs.IDENT_RE + '::'\n  }, {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n    relevance: 0\n  }, {\n    className: 'symbol',\n    begin: ':(?!\\\\s)',\n    contains: [STRING, {\n      begin: RUBY_METHOD_RE\n    }],\n    relevance: 0\n  }, NUMBER, {\n    // negative-look forward attemps to prevent false matches like:\n    // @ident@ or $ident$ that might indicate this is not ruby at all\n    className: \"variable\",\n    begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\n  }, {\n    className: 'params',\n    begin: /\\|/,\n    end: /\\|/,\n    relevance: 0,\n    // this could be a lot of things (in other languages) other than params\n    keywords: RUBY_KEYWORDS\n  }, {\n    // regexp container\n    begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n    keywords: 'unless',\n    contains: [{\n      className: 'regexp',\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      illegal: /\\n/,\n      variants: [{\n        begin: '/',\n        end: '/[a-z]*'\n      }, {\n        begin: /%r\\{/,\n        end: /\\}[a-z]*/\n      }, {\n        begin: '%r\\\\(',\n        end: '\\\\)[a-z]*'\n      }, {\n        begin: '%r!',\n        end: '![a-z]*'\n      }, {\n        begin: '%r\\\\[',\n        end: '\\\\][a-z]*'\n      }]\n    }].concat(IRB_OBJECT, COMMENT_MODES),\n    relevance: 0\n  }].concat(IRB_OBJECT, COMMENT_MODES);\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS; // >>\n  // ?>\n\n  var SIMPLE_PROMPT = \"[>?]>\"; // irb(main):001:0>\n\n  var DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+>\";\n  var RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\n  var IRB_DEFAULT = [{\n    begin: /^\\s*=>/,\n    starts: {\n      end: '$',\n      contains: RUBY_DEFAULT_CONTAINS\n    }\n  }, {\n    className: 'meta',\n    begin: '^(' + SIMPLE_PROMPT + \"|\" + DEFAULT_PROMPT + '|' + RVM_PROMPT + ')(?=[ ])',\n    starts: {\n      end: '$',\n      contains: RUBY_DEFAULT_CONTAINS\n    }\n  }];\n  COMMENT_MODES.unshift(IRB_OBJECT);\n  return {\n    name: 'Ruby',\n    aliases: ['rb', 'gemspec', 'podspec', 'thor', 'irb'],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [hljs.SHEBANG({\n      binary: \"ruby\"\n    })].concat(IRB_DEFAULT).concat(COMMENT_MODES).concat(RUBY_DEFAULT_CONTAINS)\n  };\n}\n\nmodule.exports = ruby;","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/highlight.js/lib/languages/ruby.js"],"names":["source","re","lookahead","concat","args","joined","map","x","join","ruby","hljs","RUBY_METHOD_RE","RUBY_KEYWORDS","keyword","built_in","literal","YARDOCTAG","className","begin","IRB_OBJECT","end","COMMENT_MODES","COMMENT","contains","relevance","SUBST","keywords","STRING","BACKSLASH_ESCAPE","variants","returnBegin","END_SAME_AS_BEGIN","decimal","digits","NUMBER","PARAMS","endsParent","RUBY_DEFAULT_CONTAINS","beginKeywords","illegal","inherit","TITLE_MODE","IDENT_RE","UNDERSCORE_IDENT_RE","RE_STARTERS_RE","SIMPLE_PROMPT","DEFAULT_PROMPT","RVM_PROMPT","IRB_DEFAULT","starts","unshift","name","aliases","SHEBANG","binary","module","exports"],"mappings":"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","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Ruby\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\nWebsite: https://www.ruby-lang.org/\nAuthor: Anton Kovalyov <anton@kovalyov.net>\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\nCategory: common\n*/\n\nfunction ruby(hljs) {\n  var RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)';\n  var RUBY_KEYWORDS = {\n    keyword:\n      'and then defined module in return redo if BEGIN retry end for self when ' +\n      'next until do begin unless END rescue else break undef not super class case ' +\n      'require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor ' +\n      '__FILE__',\n    built_in: 'proc lambda',\n    literal:\n      'true false nil'\n  };\n  var YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  var IRB_OBJECT = {\n    begin: '#<', end: '>'\n  };\n  var COMMENT_MODES = [\n    hljs.COMMENT(\n      '#',\n      '$',\n      {\n        contains: [YARDOCTAG]\n      }\n    ),\n    hljs.COMMENT(\n      '^=begin',\n      '^=end',\n      {\n        contains: [YARDOCTAG],\n        relevance: 10\n      }\n    ),\n    hljs.COMMENT('^__END__', '\\\\n$')\n  ];\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /\\}/,\n    keywords: RUBY_KEYWORDS\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {begin: /'/, end: /'/},\n      {begin: /\"/, end: /\"/},\n      {begin: /`/, end: /`/},\n      {begin: /%[qQwWx]?\\(/, end: /\\)/},\n      {begin: /%[qQwWx]?\\[/, end: /\\]/},\n      {begin: /%[qQwWx]?\\{/, end: /\\}/},\n      {begin: /%[qQwWx]?</, end: />/},\n      {begin: /%[qQwWx]?\\//, end: /\\//},\n      {begin: /%[qQwWx]?%/, end: /%/},\n      {begin: /%[qQwWx]?-/, end: /-/},\n      {begin: /%[qQwWx]?\\|/, end: /\\|/},\n      {\n        // \\B in the beginning suppresses recognition of ?-sequences where ?\n        // is the last character of a preceding identifier, as in: `func?4`\n        begin: /\\B\\?(\\\\\\d{1,3}|\\\\x[A-Fa-f0-9]{1,2}|\\\\u[A-Fa-f0-9]{4}|\\\\?\\S)\\b/\n      },\n      { // heredocs\n        begin: /<<[-~]?'?(\\w+)\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/,\n        returnBegin: true,\n        contains: [\n          { begin: /<<[-~]?'?/ },\n          hljs.END_SAME_AS_BEGIN({\n            begin: /(\\w+)/, end: /(\\w+)/,\n            contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          })\n        ]\n      }\n    ]\n  };\n\n  // Ruby syntax is underdocumented, but this grammar seems to be accurate\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\n  var decimal = '[1-9](_?[0-9])*|0';\n  var digits = '[0-9](_?[0-9])*';\n  var NUMBER = {\n    className: 'number', relevance: 0,\n    variants: [\n      // decimal integer/float, optionally exponential or rational, optionally imaginary\n      { begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b` },\n\n      // explicit decimal/binary/octal/hexadecimal integer,\n      // optionally rational and/or imaginary\n      { begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\" },\n\n      // 0-prefixed implicit octal integer, optionally rational and/or imaginary\n      { begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\" },\n    ]\n  };\n\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)', endsParent: true,\n    keywords: RUBY_KEYWORDS\n  };\n\n  var RUBY_DEFAULT_CONTAINS = [\n    STRING,\n    {\n      className: 'class',\n      beginKeywords: 'class module', end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|!)?'}),\n        {\n          begin: '<\\\\s*',\n          contains: [{\n            begin: '(' + hljs.IDENT_RE + '::)?' + hljs.IDENT_RE\n          }]\n        }\n      ].concat(COMMENT_MODES)\n    },\n    {\n      className: 'function',\n      // def method_name(\n      // def method_name;\n      // def method_name (end of line)\n      begin: concat(/def\\s*/, lookahead(RUBY_METHOD_RE + \"\\\\s*(\\\\(|;|$)\")),\n      keywords: \"def\",\n      end: '$|;',\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {begin: RUBY_METHOD_RE}),\n        PARAMS\n      ].concat(COMMENT_MODES)\n    },\n    {\n      // swallow namespace qualifiers before symbols\n      begin: hljs.IDENT_RE + '::'\n    },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [STRING, {begin: RUBY_METHOD_RE}],\n      relevance: 0\n    },\n    NUMBER,\n    {\n      // negative-look forward attemps to prevent false matches like:\n      // @ident@ or $ident$ that might indicate this is not ruby at all\n      className: \"variable\",\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\n    },\n    {\n      className: 'params',\n      begin: /\\|/,\n      end: /\\|/,\n      relevance:0, // this could be a lot of things (in other languages) other than params\n      keywords: RUBY_KEYWORDS\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n      keywords: 'unless',\n      contains: [\n        {\n          className: 'regexp',\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          illegal: /\\n/,\n          variants: [\n            {begin: '/', end: '/[a-z]*'},\n            {begin: /%r\\{/, end: /\\}[a-z]*/},\n            {begin: '%r\\\\(', end: '\\\\)[a-z]*'},\n            {begin: '%r!', end: '![a-z]*'},\n            {begin: '%r\\\\[', end: '\\\\][a-z]*'}\n          ]\n        }\n      ].concat(IRB_OBJECT, COMMENT_MODES),\n      relevance: 0\n    }\n  ].concat(IRB_OBJECT, COMMENT_MODES);\n\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n\n  // >>\n  // ?>\n  var SIMPLE_PROMPT = \"[>?]>\";\n  // irb(main):001:0>\n  var DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+>\";\n  var RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\n\n  var IRB_DEFAULT = [\n    {\n      begin: /^\\s*=>/,\n      starts: {\n        end: '$', contains: RUBY_DEFAULT_CONTAINS\n      }\n    },\n    {\n      className: 'meta',\n      begin: '^('+SIMPLE_PROMPT+\"|\"+DEFAULT_PROMPT+'|'+RVM_PROMPT+')(?=[ ])',\n      starts: {\n        end: '$', contains: RUBY_DEFAULT_CONTAINS\n      }\n    }\n  ];\n\n  COMMENT_MODES.unshift(IRB_OBJECT);\n\n  return {\n    name: 'Ruby',\n    aliases: ['rb', 'gemspec', 'podspec', 'thor', 'irb'],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [\n        hljs.SHEBANG({binary:\"ruby\"}),\n      ]\n      .concat(IRB_DEFAULT)\n      .concat(COMMENT_MODES)\n      .concat(RUBY_DEFAULT_CONTAINS)\n  };\n}\n\nmodule.exports = ruby;\n"]},"metadata":{},"sourceType":"script"}