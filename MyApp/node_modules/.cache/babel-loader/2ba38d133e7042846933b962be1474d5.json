{"ast":null,"code":"'use strict';\n\nmodule.exports = jq;\njq.displayName = 'jq';\njq.aliases = [];\n\nfunction jq(Prism) {\n  ;\n\n  (function (Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source;\n    var string = RegExp(/\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(/__/g, function () {\n      return interpolation;\n    }));\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n\n          },\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    };\n    var jq = Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword: /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [{\n        pattern: /\\|=?/,\n        alias: 'pipe'\n      }, /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|or|not)\\b/],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    };\n    stringInterpolation.interpolation.inside.content.inside = jq;\n  })(Prism);\n}","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/refractor/lang/jq.js"],"names":["module","exports","jq","displayName","aliases","Prism","interpolation","source","string","RegExp","replace","stringInterpolation","pattern","lookbehind","inside","content","punctuation","languages","comment","property","greedy","function","variable","alias","keyword","boolean","number","operator","dot"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,EAAjB;AACAA,EAAE,CAACC,WAAH,GAAiB,IAAjB;AACAD,EAAE,CAACE,OAAH,GAAa,EAAb;;AACA,SAASF,EAAT,CAAYG,KAAZ,EAAmB;AACjB;;AAAC,GAAC,UAAUA,KAAV,EAAiB;AACjB,QAAIC,aAAa,GAAG,8BAA8BC,MAAlD;AACA,QAAIC,MAAM,GAAGC,MAAM,CACjB,kCAAkCF,MAAlC,CAAyCG,OAAzC,CAAiD,KAAjD,EAAwD,YAAY;AAClE,aAAOJ,aAAP;AACD,KAFD,CADiB,CAAnB;AAKA,QAAIK,mBAAmB,GAAG;AACxBL,MAAAA,aAAa,EAAE;AACbM,QAAAA,OAAO,EAAEH,MAAM,CAAC,0BAA0BF,MAA1B,GAAmCD,aAApC,CADF;AAEbO,QAAAA,UAAU,EAAE,IAFC;AAGbC,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAE;AACPH,YAAAA,OAAO,EAAE,uBADF;AAEPC,YAAAA,UAAU,EAAE,IAFL;AAGPC,YAAAA,MAAM,EAAE,IAHD,CAGM;;AAHN,WADH;AAMNE,UAAAA,WAAW,EAAE;AANP;AAHK;AADS,KAA1B;AAcA,QAAId,EAAE,GAAIG,KAAK,CAACY,SAAN,CAAgBf,EAAhB,GAAqB;AAC7BgB,MAAAA,OAAO,EAAE,KADoB;AAE7BC,MAAAA,QAAQ,EAAE;AACRP,QAAAA,OAAO,EAAEH,MAAM,CAACD,MAAM,CAACD,MAAP,GAAgB,gBAAgBA,MAAjC,CADP;AAERa,QAAAA,MAAM,EAAE,IAFA;AAGRN,QAAAA,MAAM,EAAEH;AAHA,OAFmB;AAO7BH,MAAAA,MAAM,EAAE;AACNI,QAAAA,OAAO,EAAEJ,MADH;AAENY,QAAAA,MAAM,EAAE,IAFF;AAGNN,QAAAA,MAAM,EAAEH;AAHF,OAPqB;AAY7BU,MAAAA,QAAQ,EAAE;AACRT,QAAAA,OAAO,EAAE,sBADD;AAERC,QAAAA,UAAU,EAAE;AAFJ,OAZmB;AAgB7BS,MAAAA,QAAQ,EAAE,SAhBmB;AAiB7B,0BAAoB;AAClBV,QAAAA,OAAO,EAAE,2BADS;AAElBW,QAAAA,KAAK,EAAE;AAFW,OAjBS;AAqB7BC,MAAAA,OAAO,EAAE,uHArBoB;AAsB7BC,MAAAA,OAAO,EAAE,oBAtBoB;AAuB7BC,MAAAA,MAAM,EAAE,2CAvBqB;AAwB7BC,MAAAA,QAAQ,EAAE,CACR;AACEf,QAAAA,OAAO,EAAE,MADX;AAEEW,QAAAA,KAAK,EAAE;AAFT,OADQ,EAKR,gEALQ,CAxBmB;AA+B7B,0BAAoB;AAClBX,QAAAA,OAAO,EAAE,uBADS;AAElBW,QAAAA,KAAK,EAAE;AAFW,OA/BS;AAmC7BP,MAAAA,WAAW,EAAE,mCAnCgB;AAoC7BY,MAAAA,GAAG,EAAE;AACHhB,QAAAA,OAAO,EAAE,IADN;AAEHW,QAAAA,KAAK,EAAE;AAFJ;AApCwB,KAA/B;AAyCAZ,IAAAA,mBAAmB,CAACL,aAApB,CAAkCQ,MAAlC,CAAyCC,OAAzC,CAAiDD,MAAjD,GAA0DZ,EAA1D;AACD,GA/DA,EA+DEG,KA/DF;AAgEF","sourcesContent":["'use strict'\n\nmodule.exports = jq\njq.displayName = 'jq'\njq.aliases = []\nfunction jq(Prism) {\n  ;(function (Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var string = RegExp(\n      /\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(/__/g, function () {\n        return interpolation\n      })\n    )\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    }\n    var jq = (Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword: /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [\n        {\n          pattern: /\\|=?/,\n          alias: 'pipe'\n        },\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|or|not)\\b/\n      ],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    })\n    stringInterpolation.interpolation.inside.content.inside = jq\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}