{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"initialWidth\", \"width\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDisplayName } from '@mui/utils';\nimport { getThemeProps } from '@mui/system';\nimport useTheme from '../styles/useTheme';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useMediaQuery from '../useMediaQuery';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl']; // By default, returns true if screen width is the same or greater than the given breakpoint.\n\nexport const isWidthUp = (breakpoint, width, inclusive = true) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n}; // By default, returns true if screen width is the same or less than the given breakpoint.\n\nexport const isWidthDown = (breakpoint, width, inclusive = false) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\n\nconst withWidth = (options = {}) => Component => {\n  const {\n    withTheme: withThemeOption = false,\n    noSSR = false,\n    initialWidth: initialWidthOption\n  } = options;\n\n  function WithWidth(props) {\n    const contextTheme = useTheme();\n    const theme = props.theme || contextTheme;\n\n    const _getThemeProps = getThemeProps({\n      theme,\n      name: 'MuiWithWidth',\n      props\n    }),\n          {\n      initialWidth,\n      width\n    } = _getThemeProps,\n          other = _objectWithoutPropertiesLoose(_getThemeProps, _excluded);\n\n    const [mountedState, setMountedState] = React.useState(false);\n    useEnhancedEffect(() => {\n      setMountedState(true);\n    }, []);\n    /**\n     * innerWidth |xs      sm      md      lg      xl\n     *            |-------|-------|-------|-------|------>\n     * width      |  xs   |  sm   |  md   |  lg   |  xl\n     */\n\n    const keys = theme.breakpoints.keys.slice().reverse();\n    const widthComputed = keys.reduce((output, key) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key));\n      return !output && matches ? key : output;\n    }, null);\n\n    const more = _extends({\n      width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\n    }, withThemeOption ? {\n      theme\n    } : {}, other); // When rendering the component on the server,\n    // we have no idea about the client browser screen width.\n    // In order to prevent blinks and help the reconciliation of the React tree\n    // we are not rendering the child component.\n    //\n    // An alternative is to use the `initialWidth` property.\n\n\n    if (more.width === undefined) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsx(Component, _extends({}, more));\n  }\n\n  process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n    /**\n     * As `window.innerWidth` is unavailable on the server,\n     * we default to rendering an empty component during the first mount.\n     * You might want to use a heuristic to approximate\n     * the screen width of the client browser screen width.\n     *\n     * For instance, you could be using the user-agent or the client-hints.\n     * https://caniuse.com/#search=client%20hint\n     */\n    initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n\n    /**\n     * @ignore\n     */\n    theme: PropTypes.object,\n\n    /**\n     * Bypass the width calculation logic.\n     */\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n  } : void 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    WithWidth.displayName = `WithWidth(${getDisplayName(Component)})`;\n  }\n\n  return WithWidth;\n};\n\nexport default withWidth;","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/@mui/material/Hidden/withWidth.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","getDisplayName","getThemeProps","useTheme","useEnhancedEffect","useMediaQuery","jsx","_jsx","breakpointKeys","isWidthUp","breakpoint","width","inclusive","indexOf","isWidthDown","withWidth","options","Component","withTheme","withThemeOption","noSSR","initialWidth","initialWidthOption","WithWidth","props","contextTheme","theme","_getThemeProps","name","other","mountedState","setMountedState","useState","keys","breakpoints","slice","reverse","widthComputed","reduce","output","key","matches","up","more","undefined","process","env","NODE_ENV","propTypes","oneOf","object","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"initialWidth\", \"width\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDisplayName } from '@mui/utils';\nimport { getThemeProps } from '@mui/system';\nimport useTheme from '../styles/useTheme';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useMediaQuery from '../useMediaQuery';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\n\n// By default, returns true if screen width is the same or greater than the given breakpoint.\nexport const isWidthUp = (breakpoint, width, inclusive = true) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n};\n\n// By default, returns true if screen width is the same or less than the given breakpoint.\nexport const isWidthDown = (breakpoint, width, inclusive = false) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\nconst withWidth = (options = {}) => Component => {\n  const {\n    withTheme: withThemeOption = false,\n    noSSR = false,\n    initialWidth: initialWidthOption\n  } = options;\n  function WithWidth(props) {\n    const contextTheme = useTheme();\n    const theme = props.theme || contextTheme;\n    const _getThemeProps = getThemeProps({\n        theme,\n        name: 'MuiWithWidth',\n        props\n      }),\n      {\n        initialWidth,\n        width\n      } = _getThemeProps,\n      other = _objectWithoutPropertiesLoose(_getThemeProps, _excluded);\n    const [mountedState, setMountedState] = React.useState(false);\n    useEnhancedEffect(() => {\n      setMountedState(true);\n    }, []);\n\n    /**\n     * innerWidth |xs      sm      md      lg      xl\n     *            |-------|-------|-------|-------|------>\n     * width      |  xs   |  sm   |  md   |  lg   |  xl\n     */\n    const keys = theme.breakpoints.keys.slice().reverse();\n    const widthComputed = keys.reduce((output, key) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key));\n      return !output && matches ? key : output;\n    }, null);\n    const more = _extends({\n      width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\n    }, withThemeOption ? {\n      theme\n    } : {}, other);\n\n    // When rendering the component on the server,\n    // we have no idea about the client browser screen width.\n    // In order to prevent blinks and help the reconciliation of the React tree\n    // we are not rendering the child component.\n    //\n    // An alternative is to use the `initialWidth` property.\n    if (more.width === undefined) {\n      return null;\n    }\n    return /*#__PURE__*/_jsx(Component, _extends({}, more));\n  }\n  process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n    /**\n     * As `window.innerWidth` is unavailable on the server,\n     * we default to rendering an empty component during the first mount.\n     * You might want to use a heuristic to approximate\n     * the screen width of the client browser screen width.\n     *\n     * For instance, you could be using the user-agent or the client-hints.\n     * https://caniuse.com/#search=client%20hint\n     */\n    initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    /**\n     * @ignore\n     */\n    theme: PropTypes.object,\n    /**\n     * Bypass the width calculation logic.\n     */\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n  } : void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    WithWidth.displayName = `WithWidth(${getDisplayName(Component)})`;\n  }\n  return WithWidth;\n};\nexport default withWidth;"]},"metadata":{},"sourceType":"module"}