{"ast":null,"code":"'use strict';\n\nmodule.exports = turtle;\nturtle.displayName = 'turtle';\nturtle.aliases = [];\n\nfunction turtle(Prism) {\n  Prism.languages.turtle = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'multiline-string': {\n      pattern: /\"\"\"(?:(?:\"\"?)?(?:[^\"\\\\]|\\\\.))*\"\"\"|'''(?:(?:''?)?(?:[^'\\\\]|\\\\.))*'''/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        comment: /#.*/\n      }\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    url: {\n      pattern: /<(?:[^\\x00-\\x20<>\"{}|^`\\\\]|\\\\(?:u[\\da-fA-F]{4}|U[\\da-fA-F]{8}))*>/,\n      greedy: true,\n      inside: {\n        punctuation: /[<>]/\n      }\n    },\n    function: {\n      pattern: /(?:(?![-.\\d\\xB7])[-.\\w\\xB7\\xC0-\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\w\\xC0-\\uFFFD]|%[\\da-f]{2}|\\\\.)+)?/i,\n      inside: {\n        'local-name': {\n          pattern: /([^:]*:)[\\s\\S]+/,\n          lookbehind: true\n        },\n        prefix: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    },\n    number: /[+-]?\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}.,;()[\\]]|\\^\\^/,\n    boolean: /\\b(?:true|false)\\b/,\n    keyword: [/(?:\\ba|@prefix|@base)\\b|=/, /\\b(?:graph|base|prefix)\\b/i],\n    tag: {\n      pattern: /@[a-z]+(?:-[a-z\\d]+)*/i,\n      inside: {\n        punctuation: /@/\n      }\n    }\n  };\n  Prism.languages.trig = Prism.languages['turtle'];\n}","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/refractor/lang/turtle.js"],"names":["module","exports","turtle","displayName","aliases","Prism","languages","comment","pattern","greedy","alias","inside","string","url","punctuation","function","lookbehind","prefix","number","boolean","keyword","tag","trig"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACrBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyB;AACvBK,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,KADF;AAEPC,MAAAA,MAAM,EAAE;AAFD,KADc;AAKvB,wBAAoB;AAClBD,MAAAA,OAAO,EAAE,qEADS;AAElBC,MAAAA,MAAM,EAAE,IAFU;AAGlBC,MAAAA,KAAK,EAAE,QAHW;AAIlBC,MAAAA,MAAM,EAAE;AACNJ,QAAAA,OAAO,EAAE;AADH;AAJU,KALG;AAavBK,IAAAA,MAAM,EAAE;AACNJ,MAAAA,OAAO,EAAE,6CADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KAbe;AAiBvBI,IAAAA,GAAG,EAAE;AACHL,MAAAA,OAAO,EAAE,mEADN;AAEHC,MAAAA,MAAM,EAAE,IAFL;AAGHE,MAAAA,MAAM,EAAE;AACNG,QAAAA,WAAW,EAAE;AADP;AAHL,KAjBkB;AAwBvBC,IAAAA,QAAQ,EAAE;AACRP,MAAAA,OAAO,EAAE,iGADD;AAERG,MAAAA,MAAM,EAAE;AACN,sBAAc;AACZH,UAAAA,OAAO,EAAE,iBADG;AAEZQ,UAAAA,UAAU,EAAE;AAFA,SADR;AAKNC,QAAAA,MAAM,EAAE;AACNT,UAAAA,OAAO,EAAE,SADH;AAENG,UAAAA,MAAM,EAAE;AACNG,YAAAA,WAAW,EAAE;AADP;AAFF;AALF;AAFA,KAxBa;AAuCvBI,IAAAA,MAAM,EAAE,qCAvCe;AAwCvBJ,IAAAA,WAAW,EAAE,mBAxCU;AAyCvBK,IAAAA,OAAO,EAAE,oBAzCc;AA0CvBC,IAAAA,OAAO,EAAE,CAAC,2BAAD,EAA8B,4BAA9B,CA1Cc;AA2CvBC,IAAAA,GAAG,EAAE;AACHb,MAAAA,OAAO,EAAE,wBADN;AAEHG,MAAAA,MAAM,EAAE;AACNG,QAAAA,WAAW,EAAE;AADP;AAFL;AA3CkB,GAAzB;AAkDAT,EAAAA,KAAK,CAACC,SAAN,CAAgBgB,IAAhB,GAAuBjB,KAAK,CAACC,SAAN,CAAgB,QAAhB,CAAvB;AACD","sourcesContent":["'use strict'\n\nmodule.exports = turtle\nturtle.displayName = 'turtle'\nturtle.aliases = []\nfunction turtle(Prism) {\n  Prism.languages.turtle = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'multiline-string': {\n      pattern: /\"\"\"(?:(?:\"\"?)?(?:[^\"\\\\]|\\\\.))*\"\"\"|'''(?:(?:''?)?(?:[^'\\\\]|\\\\.))*'''/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        comment: /#.*/\n      }\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    url: {\n      pattern: /<(?:[^\\x00-\\x20<>\"{}|^`\\\\]|\\\\(?:u[\\da-fA-F]{4}|U[\\da-fA-F]{8}))*>/,\n      greedy: true,\n      inside: {\n        punctuation: /[<>]/\n      }\n    },\n    function: {\n      pattern: /(?:(?![-.\\d\\xB7])[-.\\w\\xB7\\xC0-\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\w\\xC0-\\uFFFD]|%[\\da-f]{2}|\\\\.)+)?/i,\n      inside: {\n        'local-name': {\n          pattern: /([^:]*:)[\\s\\S]+/,\n          lookbehind: true\n        },\n        prefix: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    },\n    number: /[+-]?\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}.,;()[\\]]|\\^\\^/,\n    boolean: /\\b(?:true|false)\\b/,\n    keyword: [/(?:\\ba|@prefix|@base)\\b|=/, /\\b(?:graph|base|prefix)\\b/i],\n    tag: {\n      pattern: /@[a-z]+(?:-[a-z\\d]+)*/i,\n      inside: {\n        punctuation: /@/\n      }\n    }\n  }\n  Prism.languages.trig = Prism.languages['turtle']\n}\n"]},"metadata":{},"sourceType":"script"}