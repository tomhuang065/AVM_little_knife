{"ast":null,"code":"'use strict';\n\nvar refractorMarkupTemplating = require('./markup-templating.js');\n\nvar refractorPhp = require('./php.js');\n\nmodule.exports = latte;\nlatte.displayName = 'latte';\nlatte.aliases = [];\n\nfunction latte(Prism) {\n  Prism.register(refractorMarkupTemplating);\n  Prism.register(refractorPhp);\n\n  (function (Prism) {\n    Prism.languages.latte = {\n      comment: /^\\{\\*[\\s\\S]*/,\n      ld: {\n        pattern: /^\\{(?:[=_]|\\/?(?!\\d|\\w+\\()\\w+|)/,\n        inside: {\n          punctuation: /^\\{\\/?/,\n          tag: {\n            pattern: /.+/,\n            alias: 'important'\n          }\n        }\n      },\n      rd: {\n        pattern: /\\}$/,\n        inside: {\n          punctuation: /.+/\n        }\n      },\n      php: {\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        alias: 'language-php',\n        inside: Prism.languages.php\n      }\n    };\n    var markupLatte = Prism.languages.extend('markup', {});\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'n-attr': {\n        pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n        inside: {\n          'attr-name': {\n            pattern: /^[^\\s=]+/,\n            alias: 'important'\n          },\n          'attr-value': {\n            pattern: /=[\\s\\S]+/,\n            inside: {\n              punctuation: [/^=/, {\n                pattern: /^(\\s*)[\"']|[\"']$/,\n                lookbehind: true\n              }],\n              php: {\n                pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                inside: Prism.languages.php\n              }\n            }\n          }\n        }\n      }\n    }, markupLatte.tag);\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (env.language !== 'latte') {\n        return;\n      }\n\n      var lattePattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*?\\}/g;\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'latte', lattePattern);\n      env.grammar = markupLatte;\n    });\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte');\n    });\n  })(Prism);\n}","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/refractor/lang/latte.js"],"names":["refractorMarkupTemplating","require","refractorPhp","module","exports","latte","displayName","aliases","Prism","register","languages","comment","ld","pattern","inside","punctuation","tag","alias","rd","php","markupLatte","extend","insertBefore","lookbehind","hooks","add","env","language","lattePattern","buildPlaceholders","grammar","tokenizePlaceholders"],"mappings":"AAAA;;AACA,IAAIA,yBAAyB,GAAGC,OAAO,CAAC,wBAAD,CAAvC;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,UAAD,CAA1B;;AACAE,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AACAA,KAAK,CAACC,WAAN,GAAoB,OAApB;AACAD,KAAK,CAACE,OAAN,GAAgB,EAAhB;;AACA,SAASF,KAAT,CAAeG,KAAf,EAAsB;AACpBA,EAAAA,KAAK,CAACC,QAAN,CAAeT,yBAAf;AACAQ,EAAAA,KAAK,CAACC,QAAN,CAAeP,YAAf;;AACC,GAAC,UAAUM,KAAV,EAAiB;AACjBA,IAAAA,KAAK,CAACE,SAAN,CAAgBL,KAAhB,GAAwB;AACtBM,MAAAA,OAAO,EAAE,cADa;AAEtBC,MAAAA,EAAE,EAAE;AACFC,QAAAA,OAAO,EAAE,iCADP;AAEFC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE,QADP;AAENC,UAAAA,GAAG,EAAE;AACHH,YAAAA,OAAO,EAAE,IADN;AAEHI,YAAAA,KAAK,EAAE;AAFJ;AAFC;AAFN,OAFkB;AAYtBC,MAAAA,EAAE,EAAE;AACFL,QAAAA,OAAO,EAAE,KADP;AAEFC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE;AADP;AAFN,OAZkB;AAkBtBI,MAAAA,GAAG,EAAE;AACHN,QAAAA,OAAO,EAAE,kBADN;AAEHI,QAAAA,KAAK,EAAE,cAFJ;AAGHH,QAAAA,MAAM,EAAEN,KAAK,CAACE,SAAN,CAAgBS;AAHrB;AAlBiB,KAAxB;AAwBA,QAAIC,WAAW,GAAGZ,KAAK,CAACE,SAAN,CAAgBW,MAAhB,CAAuB,QAAvB,EAAiC,EAAjC,CAAlB;AACAb,IAAAA,KAAK,CAACE,SAAN,CAAgBY,YAAhB,CACE,QADF,EAEE,YAFF,EAGE;AACE,gBAAU;AACRT,QAAAA,OAAO,EAAE,oDADD;AAERC,QAAAA,MAAM,EAAE;AACN,uBAAa;AACXD,YAAAA,OAAO,EAAE,UADE;AAEXI,YAAAA,KAAK,EAAE;AAFI,WADP;AAKN,wBAAc;AACZJ,YAAAA,OAAO,EAAE,UADG;AAEZC,YAAAA,MAAM,EAAE;AACNC,cAAAA,WAAW,EAAE,CACX,IADW,EAEX;AACEF,gBAAAA,OAAO,EAAE,kBADX;AAEEU,gBAAAA,UAAU,EAAE;AAFd,eAFW,CADP;AAQNJ,cAAAA,GAAG,EAAE;AACHN,gBAAAA,OAAO,EAAE,kBADN;AAEHC,gBAAAA,MAAM,EAAEN,KAAK,CAACE,SAAN,CAAgBS;AAFrB;AARC;AAFI;AALR;AAFA;AADZ,KAHF,EA8BEC,WAAW,CAACJ,GA9Bd;AAgCAR,IAAAA,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,EAAmC,UAAUC,GAAV,EAAe;AAChD,UAAIA,GAAG,CAACC,QAAJ,KAAiB,OAArB,EAA8B;AAC5B;AACD;;AACD,UAAIC,YAAY,GAAG,uHAAnB;AACApB,MAAAA,KAAK,CAACE,SAAN,CAAgB,mBAAhB,EAAqCmB,iBAArC,CACEH,GADF,EAEE,OAFF,EAGEE,YAHF;AAKAF,MAAAA,GAAG,CAACI,OAAJ,GAAcV,WAAd;AACD,KAXD;AAYAZ,IAAAA,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,EAAkC,UAAUC,GAAV,EAAe;AAC/ClB,MAAAA,KAAK,CAACE,SAAN,CAAgB,mBAAhB,EAAqCqB,oBAArC,CAA0DL,GAA1D,EAA+D,OAA/D;AACD,KAFD;AAGD,GAzEA,EAyEElB,KAzEF;AA0EF","sourcesContent":["'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nvar refractorPhp = require('./php.js')\nmodule.exports = latte\nlatte.displayName = 'latte'\nlatte.aliases = []\nfunction latte(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorPhp)\n  ;(function (Prism) {\n    Prism.languages.latte = {\n      comment: /^\\{\\*[\\s\\S]*/,\n      ld: {\n        pattern: /^\\{(?:[=_]|\\/?(?!\\d|\\w+\\()\\w+|)/,\n        inside: {\n          punctuation: /^\\{\\/?/,\n          tag: {\n            pattern: /.+/,\n            alias: 'important'\n          }\n        }\n      },\n      rd: {\n        pattern: /\\}$/,\n        inside: {\n          punctuation: /.+/\n        }\n      },\n      php: {\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        alias: 'language-php',\n        inside: Prism.languages.php\n      }\n    }\n    var markupLatte = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-value',\n      {\n        'n-attr': {\n          pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n          inside: {\n            'attr-name': {\n              pattern: /^[^\\s=]+/,\n              alias: 'important'\n            },\n            'attr-value': {\n              pattern: /=[\\s\\S]+/,\n              inside: {\n                punctuation: [\n                  /^=/,\n                  {\n                    pattern: /^(\\s*)[\"']|[\"']$/,\n                    lookbehind: true\n                  }\n                ],\n                php: {\n                  pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                  inside: Prism.languages.php\n                }\n              }\n            }\n          }\n        }\n      },\n      markupLatte.tag\n    )\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (env.language !== 'latte') {\n        return\n      }\n      var lattePattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*?\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'latte',\n        lattePattern\n      )\n      env.grammar = markupLatte\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte')\n    })\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}