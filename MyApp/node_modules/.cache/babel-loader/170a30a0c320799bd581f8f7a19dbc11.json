{"ast":null,"code":"'use strict';\n\nmodule.exports = nix;\nnix.displayName = 'nix';\nnix.aliases = [];\n\nfunction nix(Prism) {\n  Prism.languages.nix = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\n          lookbehind: true,\n          inside: {\n            antiquotation: {\n              pattern: /^\\$(?=\\{)/,\n              alias: 'variable'\n            } // See rest below\n\n          }\n        }\n      }\n    },\n    url: [/\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/, {\n      pattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n      lookbehind: true\n    }],\n    antiquotation: {\n      pattern: /\\$(?=\\{)/,\n      alias: 'variable'\n    },\n    number: /\\b\\d+\\b/,\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n    function: /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n    punctuation: /[{}()[\\].,:;]/\n  };\n  Prism.languages.nix.string.inside.interpolation.inside.rest = Prism.languages.nix;\n}","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/refractor/lang/nix.js"],"names":["module","exports","nix","displayName","aliases","Prism","languages","comment","string","pattern","greedy","inside","interpolation","lookbehind","antiquotation","alias","url","number","keyword","function","boolean","operator","punctuation","rest"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;;AACA,SAASF,GAAT,CAAaG,KAAb,EAAoB;AAClBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,GAAsB;AACpBK,IAAAA,OAAO,EAAE,sBADW;AAEpBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,8DADH;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNC,MAAAA,MAAM,EAAE;AACNC,QAAAA,aAAa,EAAE;AACb;AACAH,UAAAA,OAAO,EAAE,kDAFI;AAGbI,UAAAA,UAAU,EAAE,IAHC;AAIbF,UAAAA,MAAM,EAAE;AACNG,YAAAA,aAAa,EAAE;AACbL,cAAAA,OAAO,EAAE,WADI;AAEbM,cAAAA,KAAK,EAAE;AAFM,aADT,CAIJ;;AAJI;AAJK;AADT;AAHF,KAFY;AAmBpBC,IAAAA,GAAG,EAAE,CACH,yCADG,EAEH;AACEP,MAAAA,OAAO,EAAE,mFADX;AAEEI,MAAAA,UAAU,EAAE;AAFd,KAFG,CAnBe;AA0BpBC,IAAAA,aAAa,EAAE;AACbL,MAAAA,OAAO,EAAE,UADI;AAEbM,MAAAA,KAAK,EAAE;AAFM,KA1BK;AA8BpBE,IAAAA,MAAM,EAAE,SA9BY;AA+BpBC,IAAAA,OAAO,EAAE,kEA/BW;AAgCpBC,IAAAA,QAAQ,EAAE,kgBAhCU;AAiCpBC,IAAAA,OAAO,EAAE,oBAjCW;AAkCpBC,IAAAA,QAAQ,EAAE,sCAlCU;AAmCpBC,IAAAA,WAAW,EAAE;AAnCO,GAAtB;AAqCAjB,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,CAAoBM,MAApB,CAA2BG,MAA3B,CAAkCC,aAAlC,CAAgDD,MAAhD,CAAuDY,IAAvD,GACElB,KAAK,CAACC,SAAN,CAAgBJ,GADlB;AAED","sourcesContent":["'use strict'\n\nmodule.exports = nix\nnix.displayName = 'nix'\nnix.aliases = []\nfunction nix(Prism) {\n  Prism.languages.nix = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\n          lookbehind: true,\n          inside: {\n            antiquotation: {\n              pattern: /^\\$(?=\\{)/,\n              alias: 'variable'\n            } // See rest below\n          }\n        }\n      }\n    },\n    url: [\n      /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n      {\n        pattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }\n    ],\n    antiquotation: {\n      pattern: /\\$(?=\\{)/,\n      alias: 'variable'\n    },\n    number: /\\b\\d+\\b/,\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n    function: /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n    punctuation: /[{}()[\\].,:;]/\n  }\n  Prism.languages.nix.string.inside.interpolation.inside.rest =\n    Prism.languages.nix\n}\n"]},"metadata":{},"sourceType":"script"}