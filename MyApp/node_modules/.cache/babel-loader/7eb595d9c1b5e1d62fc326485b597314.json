{"ast":null,"code":"'use strict';\n\nmodule.exports = velocity;\nvelocity.displayName = 'velocity';\nvelocity.aliases = [];\n\nfunction velocity(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.velocity = Prism.languages.extend('markup', {});\n    var velocity = {\n      variable: {\n        pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\n        lookbehind: true,\n        inside: {} // See below\n\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      number: /\\b\\d+\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n      punctuation: /[(){}[\\]:,.]/\n    };\n    velocity.variable.inside = {\n      string: velocity['string'],\n      function: {\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n        lookbehind: true\n      },\n      number: velocity['number'],\n      boolean: velocity['boolean'],\n      punctuation: velocity['punctuation']\n    };\n    Prism.languages.insertBefore('velocity', 'comment', {\n      unparsed: {\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^#\\[\\[|]]#$/\n        }\n      },\n      'velocity-comment': [{\n        pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      }, {\n        pattern: /(^|[^\\\\])##.*/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      }],\n      directive: {\n        pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\n            inside: {\n              punctuation: /[{}]/\n            }\n          },\n          rest: velocity\n        }\n      },\n      variable: velocity['variable']\n    });\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest = Prism.languages.velocity;\n  })(Prism);\n}","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/refractor/lang/velocity.js"],"names":["module","exports","velocity","displayName","aliases","Prism","languages","extend","variable","pattern","lookbehind","inside","string","greedy","number","boolean","operator","punctuation","function","insertBefore","unparsed","alias","directive","keyword","rest"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,QAAjB;AACAA,QAAQ,CAACC,WAAT,GAAuB,UAAvB;AACAD,QAAQ,CAACE,OAAT,GAAmB,EAAnB;;AACA,SAASF,QAAT,CAAkBG,KAAlB,EAAyB;AACvB;;AAAC,GAAC,UAAUA,KAAV,EAAiB;AACjBA,IAAAA,KAAK,CAACC,SAAN,CAAgBJ,QAAhB,GAA2BG,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,QAAvB,EAAiC,EAAjC,CAA3B;AACA,QAAIL,QAAQ,GAAG;AACbM,MAAAA,QAAQ,EAAE;AACRC,QAAAA,OAAO,EAAE,wGADD;AAERC,QAAAA,UAAU,EAAE,IAFJ;AAGRC,QAAAA,MAAM,EAAE,EAHA,CAGG;;AAHH,OADG;AAMbC,MAAAA,MAAM,EAAE;AACNH,QAAAA,OAAO,EAAE,iBADH;AAENI,QAAAA,MAAM,EAAE;AAFF,OANK;AAUbC,MAAAA,MAAM,EAAE,SAVK;AAWbC,MAAAA,OAAO,EAAE,oBAXI;AAYbC,MAAAA,QAAQ,EAAE,gEAZG;AAabC,MAAAA,WAAW,EAAE;AAbA,KAAf;AAeAf,IAAAA,QAAQ,CAACM,QAAT,CAAkBG,MAAlB,GAA2B;AACzBC,MAAAA,MAAM,EAAEV,QAAQ,CAAC,QAAD,CADS;AAEzBgB,MAAAA,QAAQ,EAAE;AACRT,QAAAA,OAAO,EAAE,2BADD;AAERC,QAAAA,UAAU,EAAE;AAFJ,OAFe;AAMzBI,MAAAA,MAAM,EAAEZ,QAAQ,CAAC,QAAD,CANS;AAOzBa,MAAAA,OAAO,EAAEb,QAAQ,CAAC,SAAD,CAPQ;AAQzBe,MAAAA,WAAW,EAAEf,QAAQ,CAAC,aAAD;AARI,KAA3B;AAUAG,IAAAA,KAAK,CAACC,SAAN,CAAgBa,YAAhB,CAA6B,UAA7B,EAAyC,SAAzC,EAAoD;AAClDC,MAAAA,QAAQ,EAAE;AACRX,QAAAA,OAAO,EAAE,2BADD;AAERC,QAAAA,UAAU,EAAE,IAFJ;AAGRG,QAAAA,MAAM,EAAE,IAHA;AAIRF,QAAAA,MAAM,EAAE;AACNM,UAAAA,WAAW,EAAE;AADP;AAJA,OADwC;AASlD,0BAAoB,CAClB;AACER,QAAAA,OAAO,EAAE,yBADX;AAEEC,QAAAA,UAAU,EAAE,IAFd;AAGEG,QAAAA,MAAM,EAAE,IAHV;AAIEQ,QAAAA,KAAK,EAAE;AAJT,OADkB,EAOlB;AACEZ,QAAAA,OAAO,EAAE,eADX;AAEEC,QAAAA,UAAU,EAAE,IAFd;AAGEG,QAAAA,MAAM,EAAE,IAHV;AAIEQ,QAAAA,KAAK,EAAE;AAJT,OAPkB,CAT8B;AAuBlDC,MAAAA,SAAS,EAAE;AACTb,QAAAA,OAAO,EAAE,sFADA;AAETC,QAAAA,UAAU,EAAE,IAFH;AAGTC,QAAAA,MAAM,EAAE;AACNY,UAAAA,OAAO,EAAE;AACPd,YAAAA,OAAO,EAAE,0CADF;AAEPE,YAAAA,MAAM,EAAE;AACNM,cAAAA,WAAW,EAAE;AADP;AAFD,WADH;AAONO,UAAAA,IAAI,EAAEtB;AAPA;AAHC,OAvBuC;AAoClDM,MAAAA,QAAQ,EAAEN,QAAQ,CAAC,UAAD;AApCgC,KAApD;AAsCAG,IAAAA,KAAK,CAACC,SAAN,CAAgBJ,QAAhB,CAAyB,KAAzB,EAAgCS,MAAhC,CAAuC,YAAvC,EAAqDA,MAArD,CAA4Da,IAA5D,GACEnB,KAAK,CAACC,SAAN,CAAgBJ,QADlB;AAED,GAnEA,EAmEEG,KAnEF;AAoEF","sourcesContent":["'use strict'\n\nmodule.exports = velocity\nvelocity.displayName = 'velocity'\nvelocity.aliases = []\nfunction velocity(Prism) {\n  ;(function (Prism) {\n    Prism.languages.velocity = Prism.languages.extend('markup', {})\n    var velocity = {\n      variable: {\n        pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\n        lookbehind: true,\n        inside: {} // See below\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      number: /\\b\\d+\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n      punctuation: /[(){}[\\]:,.]/\n    }\n    velocity.variable.inside = {\n      string: velocity['string'],\n      function: {\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n        lookbehind: true\n      },\n      number: velocity['number'],\n      boolean: velocity['boolean'],\n      punctuation: velocity['punctuation']\n    }\n    Prism.languages.insertBefore('velocity', 'comment', {\n      unparsed: {\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^#\\[\\[|]]#$/\n        }\n      },\n      'velocity-comment': [\n        {\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }\n      ],\n      directive: {\n        pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\n            inside: {\n              punctuation: /[{}]/\n            }\n          },\n          rest: velocity\n        }\n      },\n      variable: velocity['variable']\n    })\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\n      Prism.languages.velocity\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}