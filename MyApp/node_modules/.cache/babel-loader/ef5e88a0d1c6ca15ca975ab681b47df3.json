{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/src/pages/notifications/Notifications.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport classnames from \"classnames\";\nimport { Paper, Box } from '@mui/material'; // styles\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\"; // components\n\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Notification from \"../../components/Notification\";\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\nconst positions = [toast.POSITION.TOP_LEFT, toast.POSITION.TOP_CENTER, toast.POSITION.TOP_RIGHT, toast.POSITION.BOTTOM_LEFT, toast.POSITION.BOTTOM_CENTER, toast.POSITION.BOTTOM_RIGHT];\nexport default function NotificationsPage(props) {\n  _s();\n\n  var classes = useStyles(); // local\n\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  var [errorToastId, setErrorToastId] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      title: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        className: classes.toastsContainer,\n        closeButton: /*#__PURE__*/_jsxDEV(CloseButton, {\n          className: classes.notificationCloseButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this),\n        closeOnClick: false,\n        progressClassName: classes.notificationProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          disableWidgetMenu: true,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.customBorderRadius,\n            classes: {\n              root: classes.root // class name, e.g. `classes-nesting-root-x`\n\n            },\n            elevation: 15,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \"custom border radius\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          title: \"Notification Types Examples\",\n          disableWidgetMenu: true,\n          children: [/*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            shadowless: true,\n            type: \"message\",\n            message: \"Thanks for Checking out Messenger\",\n            variant: \"contained\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            shadowless: true,\n            type: \"feedback\",\n            message: \"New user feedback received\",\n            variant: \"contained\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            shadowless: true,\n            type: \"customer\",\n            message: \"New customer is registered\",\n            variant: \"contained\",\n            color: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            shadowless: true,\n            type: \"shipped\",\n            message: \"The order was shipped\",\n            variant: \"contained\",\n            color: \"warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            shadowless: true,\n            type: \"delivered\",\n            message: \"The order was delivered\",\n            variant: \"contained\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            shadowless: true,\n            type: \"defence\",\n            message: \"5 Defence alerts\",\n            variant: \"contained\",\n            color: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          title: \"Notification Types Examples\",\n          disableWidgetMenu: true,\n          children: [/*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            type: \"report\",\n            message: \"New report has been received\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            type: \"feedback\",\n            message: \"New user feedback received\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            type: \"shipped\",\n            message: \"The item was shipped\",\n            color: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            type: \"message\",\n            message: \"The new message from user @nahawaii\",\n            color: \"warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            type: \"upload\",\n            message: \"Your file is ready to upload\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            type: \"disc\",\n            message: \"The disc is full\",\n            color: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          title: \"Notification Types Examples\",\n          disableWidgetMenu: true,\n          children: [/*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            type: \"report\",\n            message: \"New report has been received\",\n            variant: \"rounded\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            type: \"feedback\",\n            message: \"New user feedback received\",\n            variant: \"rounded\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            type: \"shipped\",\n            message: \"The item was shipped\",\n            variant: \"rounded\",\n            color: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            type: \"message\",\n            message: \"The new message from user @nahawaii\",\n            variant: \"rounded\",\n            color: \"warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            type: \"upload\",\n            message: \"Your file is ready to upload\",\n            variant: \"rounded\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            className: classes.notificationItem,\n            type: \"disc\",\n            message: \"The disc is full\",\n            variant: \"rounded\",\n            color: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true); // #############################################################\n\n  function sendNotification(componentProps, options) {\n    return toast( /*#__PURE__*/_jsxDEV(Notification, { ...componentProps,\n      className: classes.notificationComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), options);\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\"\n    };\n    toast.update(errorToastId, {\n      render: /*#__PURE__*/_jsxDEV(Notification, { ...componentProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 15\n      }, this),\n      type: \"success\"\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\"\n        };\n        break;\n\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Message was not sent!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification\n        };\n        break;\n\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was shipped\",\n          variant: \"contained\",\n          color: \"success\"\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification\n    });\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n} // #############################################################\n\n_s(NotificationsPage, \"uG1ZdsPE6DQYnkcVXO+4lBWPxJw=\", false, function () {\n  return [useStyles];\n});\n\n_c = NotificationsPage;\n\nfunction CloseButton({\n  closeToast,\n  className\n}) {\n  return /*#__PURE__*/_jsxDEV(CloseIcon, {\n    className: className,\n    onClick: closeToast\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 402,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = CloseButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NotificationsPage\");\n$RefreshReg$(_c2, \"CloseButton\");","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/src/pages/notifications/Notifications.js"],"names":["React","useState","Grid","Close","CloseIcon","ToastContainer","toast","SyntaxHighlighter","docco","classnames","Paper","Box","useStyles","Widget","PageTitle","Notification","Typography","Button","positions","POSITION","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","NotificationsPage","props","classes","notificationsPosition","setNotificationPosition","errorToastId","setErrorToastId","toastsContainer","notificationCloseButton","notificationProgress","customBorderRadius","root","notificationItem","sendNotification","componentProps","options","notificationComponent","retryErrorNotification","type","message","variant","color","update","render","handleNotificationCall","notificationType","extraButton","extraButtonClick","toastId","position","progressClassName","progress","onClose","className","notification","changeNotificationPosition","positionId","CloseButton","closeToast"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport classnames from \"classnames\";\nimport { Paper, Box } from '@mui/material';\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Notification from \"../../components/Notification\";\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nexport default function NotificationsPage(props) {\n  var classes = useStyles();\n\n  // local\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  var [errorToastId, setErrorToastId] = useState(null);\n\n  return (\n    <>\n      <PageTitle title=\"Notifications\" />\n      <Grid container spacing={4}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          {/* <Paper variant=\"outlined\" />\n          <Paper variant=\"outlined\" square /> */}\n          <Paper className={classes.customBorderRadius} classes={{\n          root: classes.root, // class name, e.g. `classes-nesting-root-x`\n       }} elevation={15} >\n            <Typography variant=\"h5\">custom border radius</Typography>\n            {/* <Box p={1}>\n              <Typography variant=\"h5\">custom border radius</Typography>\n            </Box> */}\n          </Paper>\n          {/* <Grid container item xs={12}>\n          <Grid item xs={4}> */}\n          {/* <Widget title=\"Layout Options\" noWidgetShadow disableWidgetMenu noBodyPadding noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              There are few position options available for notifications. You\n              can click any of them to change notifications position:\n            </Typography>\n            <div className={classes.layoutContainer}>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(0)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 0,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(1)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 1,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(2)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 2,\n                  })}\n                />\n              </div>\n              <Typography className={classes.layoutText} size=\"md\">\n                Click any position\n              </Typography>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(3)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 3,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(4)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 4,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(5)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 5,\n                  })}\n                />\n              </div>\n            </div>\n          </Widget> */}\n            {/* </Grid>\n            <Grid item xs={4}> */}\n          {/* <Widget title=\"Notifications Types\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              Different types of notifications for lost of use cases. Custom\n              classes are also supported.\n            </Typography>\n            <div className={classes.buttonsContainer}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => handleNotificationCall(\"info\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Info Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => handleNotificationCall(\"error\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Error + Retry Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={() => handleNotificationCall(\"success\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Success Message\n              </Button>\n            </div>\n          </Widget> */}\n            {/* </Grid>\n            <Grid item xs={4}> */}\n          {/* <Widget title=\"Usage\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              Notifications are created with the help of{\" \"}\n              <a href=\"https://github.com/fkhadra/react-toastify\">\n                react-toastify\n              </a>\n            </Typography> */}\n            {/* <div className={classes.codeContainer}> */}\n              {/* <SyntaxHighlighter\n                className={classes.codeComponent}\n                language=\"javascript\"\n                style={docco}\n              >{`\n  // import needed components, functions and styles\n  import { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\n\n  const Page = () => {\n    <div>\n      <ToastContainer />\n      <button onClick={() => toast('Toast Message')}>\n        show notification\n      </button>\n    </div>\n  };\n            `}</SyntaxHighlighter> */}\n              {/* <Typography variant=\"caption\">\n                For more API information refer to the library documentation\n              </Typography> */}\n            {/* </div> */}\n          {/* </Widget> */}\n            {/* </Grid>\n          </Grid> */}\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"message\"\n              message=\"Thanks for Checking out Messenger\"\n              variant=\"contained\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"customer\"\n              message=\"New customer is registered\"\n              variant=\"contained\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"shipped\"\n              message=\"The order was shipped\"\n              variant=\"contained\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"delivered\"\n              message=\"The order was delivered\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"defence\"\n              message=\"5 Defence alerts\"\n              variant=\"contained\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              variant=\"rounded\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              variant=\"rounded\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              variant=\"rounded\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              variant=\"rounded\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Message was not sent!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was shipped\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n}\n\n// #############################################################\nfunction CloseButton({ closeToast, className }) {\n  return <CloseIcon className={className} onClick={closeToast} />;\n}\n"]},"metadata":{},"sourceType":"module"}