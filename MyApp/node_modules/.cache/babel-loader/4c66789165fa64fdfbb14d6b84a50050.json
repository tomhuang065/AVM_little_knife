{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\", \"disabled\", \"label\", \"slotProps\", \"slots\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport { getOptionUnstyledUtilityClass } from './optionUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    highlighted,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUnstyledUtilityClass, {});\n}\n/**\n * An unstyled option to be used within a SelectUnstyled.\n */\n\n\nconst OptionUnstyled = /*#__PURE__*/React.forwardRef(function OptionUnstyled(props, ref) {\n  const {\n    children,\n    component,\n    disabled,\n    label,\n    slotProps = {},\n    slots = {},\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const selectContext = React.useContext(SelectUnstyledContext);\n\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n\n  const Root = component || slots.root || 'li';\n  const selectOption = {\n    value,\n    label: label || children,\n    disabled\n  };\n  const optionState = selectContext.getOptionState(selectOption);\n  const optionProps = selectContext.getOptionProps(selectOption);\n  const listboxRef = selectContext.listboxRef;\n\n  const ownerState = _extends({}, props, optionState);\n\n  const optionRef = React.useRef(null);\n  const handleRef = useForkRef(ref, optionRef);\n  React.useEffect(() => {\n    // Scroll to the currently highlighted option\n    if (optionState.highlighted) {\n      if (!listboxRef.current || !optionRef.current) {\n        return;\n      }\n\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\n      const optionClientRect = optionRef.current.getBoundingClientRect();\n\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [optionState.highlighted, listboxRef]);\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: _extends({}, optionProps, {\n      ref: handleRef\n    }),\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n\n  /**\n   * The props used for each slot inside the OptionUnstyled.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the OptionUnstyled.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n/**\n * An unstyled option to be used within a SelectUnstyled.\n *\n * Demos:\n *\n * - [Unstyled Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [OptionUnstyled API](https://mui.com/base/api/option-unstyled/)\n */\n\nexport default /*#__PURE__*/React.memo(OptionUnstyled);","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/@mui/base/OptionUnstyled/OptionUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useForkRef","useForkRef","composeClasses","SelectUnstyledContext","getOptionUnstyledUtilityClass","useSlotProps","jsx","_jsx","useUtilityClasses","ownerState","disabled","highlighted","selected","slots","root","OptionUnstyled","forwardRef","props","ref","children","component","label","slotProps","value","other","selectContext","useContext","Error","Root","selectOption","optionState","getOptionState","optionProps","getOptionProps","listboxRef","optionRef","useRef","handleRef","useEffect","current","listboxClientRect","getBoundingClientRect","optionClientRect","top","scrollTop","bottom","classes","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","className","process","env","NODE_ENV","propTypes","node","bool","string","shape","oneOfType","func","object","any","isRequired","memo"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\", \"disabled\", \"label\", \"slotProps\", \"slots\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport { getOptionUnstyledUtilityClass } from './optionUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    highlighted,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUnstyledUtilityClass, {});\n}\n\n/**\n * An unstyled option to be used within a SelectUnstyled.\n */\nconst OptionUnstyled = /*#__PURE__*/React.forwardRef(function OptionUnstyled(props, ref) {\n  const {\n      children,\n      component,\n      disabled,\n      label,\n      slotProps = {},\n      slots = {},\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const selectContext = React.useContext(SelectUnstyledContext);\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n  const Root = component || slots.root || 'li';\n  const selectOption = {\n    value,\n    label: label || children,\n    disabled\n  };\n  const optionState = selectContext.getOptionState(selectOption);\n  const optionProps = selectContext.getOptionProps(selectOption);\n  const listboxRef = selectContext.listboxRef;\n  const ownerState = _extends({}, props, optionState);\n  const optionRef = React.useRef(null);\n  const handleRef = useForkRef(ref, optionRef);\n  React.useEffect(() => {\n    // Scroll to the currently highlighted option\n    if (optionState.highlighted) {\n      if (!listboxRef.current || !optionRef.current) {\n        return;\n      }\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\n      const optionClientRect = optionRef.current.getBoundingClientRect();\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [optionState.highlighted, listboxRef]);\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: _extends({}, optionProps, {\n      ref: handleRef\n    }),\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionUnstyled.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n  /**\n   * The props used for each slot inside the OptionUnstyled.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the OptionUnstyled.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n\n/**\n * An unstyled option to be used within a SelectUnstyled.\n *\n * Demos:\n *\n * - [Unstyled Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [OptionUnstyled API](https://mui.com/base/api/option-unstyled/)\n */\nexport default /*#__PURE__*/React.memo(OptionUnstyled);"]},"metadata":{},"sourceType":"module"}