{"ast":null,"code":"/*\nLanguage: CSS\nCategory: common, css\nWebsite: https://developer.mozilla.org/en-US/docs/Web/CSS\n*/\n\n/** @type LanguageFn */\nfunction css(hljs) {\n  var FUNCTION_LIKE = {\n    begin: /[\\w-]+\\(/,\n    returnBegin: true,\n    contains: [{\n      className: 'built_in',\n      begin: /[\\w-]+/\n    }, {\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.CSS_NUMBER_MODE]\n    }]\n  };\n  var ATTRIBUTE = {\n    className: 'attribute',\n    begin: /\\S/,\n    end: ':',\n    excludeEnd: true,\n    starts: {\n      endsWithParent: true,\n      excludeEnd: true,\n      contains: [FUNCTION_LIKE, hljs.CSS_NUMBER_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n        className: 'number',\n        begin: '#[0-9A-Fa-f]+'\n      }, {\n        className: 'meta',\n        begin: '!important'\n      }]\n    }\n  };\n  var AT_IDENTIFIER = '@[a-z-]+'; // @font-face\n\n  var AT_MODIFIERS = \"and or not only\";\n  var AT_PROPERTY_RE = /@-?\\w[\\w]*(-\\w+)*/; // @-webkit-keyframes\n\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /([*]\\s?)?(?:[A-Z_.\\-\\\\]+|--[a-zA-Z0-9_-]+)\\s*(\\/\\*\\*\\/)?:/,\n    returnBegin: true,\n    end: ';',\n    endsWithParent: true,\n    contains: [ATTRIBUTE]\n  };\n  return {\n    name: 'CSS',\n    case_insensitive: true,\n    illegal: /[=|'\\$]/,\n    contains: [hljs.C_BLOCK_COMMENT_MODE, {\n      className: 'selector-id',\n      begin: /#[A-Za-z0-9_-]+/\n    }, {\n      className: 'selector-class',\n      begin: '\\\\.' + IDENT_RE\n    }, {\n      className: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$',\n      contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE]\n    }, {\n      className: 'selector-pseudo',\n      begin: /:(:)?[a-zA-Z0-9_+()\"'.-]+/\n    }, // matching these here allows us to treat them more like regular CSS\n    // rules so everything between the {} gets regular rule highlighting,\n    // which is what we want for page and font-face\n    {\n      begin: '@(page|font-face)',\n      lexemes: AT_IDENTIFIER,\n      keywords: '@page @font-face'\n    }, {\n      begin: '@',\n      end: '[{;]',\n      // at_rule eating first \"{\" is a good thing\n      // because it doesn’t let it to be parsed as\n      // a rule set but instead drops parser into\n      // the default mode which is how it should be.\n      illegal: /:/,\n      // break on Less variables @var: ...\n      returnBegin: true,\n      contains: [{\n        className: 'keyword',\n        begin: AT_PROPERTY_RE\n      }, {\n        begin: /\\s/,\n        endsWithParent: true,\n        excludeEnd: true,\n        relevance: 0,\n        keywords: AT_MODIFIERS,\n        contains: [{\n          begin: /[a-z-]+:/,\n          className: \"attribute\"\n        }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.CSS_NUMBER_MODE]\n      }]\n    }, {\n      className: 'selector-tag',\n      begin: IDENT_RE,\n      relevance: 0\n    }, {\n      begin: /\\{/,\n      end: /\\}/,\n      illegal: /\\S/,\n      contains: [hljs.C_BLOCK_COMMENT_MODE, {\n        begin: /;/\n      }, // empty ; rule\n      RULE]\n    }]\n  };\n}\n\nmodule.exports = css;","map":{"version":3,"sources":["/home/tomhuang/Developpement web/final_project/wp_final_project/MyApp/node_modules/highlight.js/lib/languages/css.js"],"names":["css","hljs","FUNCTION_LIKE","begin","returnBegin","contains","className","end","APOS_STRING_MODE","QUOTE_STRING_MODE","CSS_NUMBER_MODE","ATTRIBUTE","excludeEnd","starts","endsWithParent","C_BLOCK_COMMENT_MODE","AT_IDENTIFIER","AT_MODIFIERS","AT_PROPERTY_RE","IDENT_RE","RULE","name","case_insensitive","illegal","lexemes","keywords","relevance","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,GAAT,CAAaC,IAAb,EAAmB;AACjB,MAAIC,aAAa,GAAG;AAClBC,IAAAA,KAAK,EAAE,UADW;AACCC,IAAAA,WAAW,EAAE,IADd;AAElBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,SAAS,EAAE,UADb;AAEEH,MAAAA,KAAK,EAAE;AAFT,KADQ,EAKR;AACEA,MAAAA,KAAK,EAAE,IADT;AACeI,MAAAA,GAAG,EAAE,IADpB;AAEEF,MAAAA,QAAQ,EAAE,CACRJ,IAAI,CAACO,gBADG,EAERP,IAAI,CAACQ,iBAFG,EAGRR,IAAI,CAACS,eAHG;AAFZ,KALQ;AAFQ,GAApB;AAiBA,MAAIC,SAAS,GAAG;AACdL,IAAAA,SAAS,EAAE,WADG;AAEdH,IAAAA,KAAK,EAAE,IAFO;AAEDI,IAAAA,GAAG,EAAE,GAFJ;AAESK,IAAAA,UAAU,EAAE,IAFrB;AAGdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,cAAc,EAAE,IADV;AACgBF,MAAAA,UAAU,EAAE,IAD5B;AAENP,MAAAA,QAAQ,EAAE,CACRH,aADQ,EAERD,IAAI,CAACS,eAFG,EAGRT,IAAI,CAACQ,iBAHG,EAIRR,IAAI,CAACO,gBAJG,EAKRP,IAAI,CAACc,oBALG,EAMR;AACET,QAAAA,SAAS,EAAE,QADb;AACuBH,QAAAA,KAAK,EAAE;AAD9B,OANQ,EASR;AACEG,QAAAA,SAAS,EAAE,MADb;AACqBH,QAAAA,KAAK,EAAE;AAD5B,OATQ;AAFJ;AAHM,GAAhB;AAoBA,MAAIa,aAAa,GAAG,UAApB,CAtCiB,CAsCe;;AAChC,MAAIC,YAAY,GAAG,iBAAnB;AACA,MAAIC,cAAc,GAAG,mBAArB,CAxCiB,CAwCyB;;AAC1C,MAAIC,QAAQ,GAAG,yBAAf;AACA,MAAIC,IAAI,GAAG;AACTjB,IAAAA,KAAK,EAAE,2DADE;AAC2DC,IAAAA,WAAW,EAAE,IADxE;AAC8EG,IAAAA,GAAG,EAAE,GADnF;AACwFO,IAAAA,cAAc,EAAE,IADxG;AAETT,IAAAA,QAAQ,EAAE,CACRM,SADQ;AAFD,GAAX;AAOA,SAAO;AACLU,IAAAA,IAAI,EAAE,KADD;AAELC,IAAAA,gBAAgB,EAAE,IAFb;AAGLC,IAAAA,OAAO,EAAE,SAHJ;AAILlB,IAAAA,QAAQ,EAAE,CACRJ,IAAI,CAACc,oBADG,EAER;AACET,MAAAA,SAAS,EAAE,aADb;AAC4BH,MAAAA,KAAK,EAAE;AADnC,KAFQ,EAKR;AACEG,MAAAA,SAAS,EAAE,gBADb;AAC+BH,MAAAA,KAAK,EAAE,QAAQgB;AAD9C,KALQ,EAQR;AACEb,MAAAA,SAAS,EAAE,eADb;AAEEH,MAAAA,KAAK,EAAE,IAFT;AAEeI,MAAAA,GAAG,EAAE,IAFpB;AAGEgB,MAAAA,OAAO,EAAE,GAHX;AAIElB,MAAAA,QAAQ,EAAE,CACRJ,IAAI,CAACO,gBADG,EAERP,IAAI,CAACQ,iBAFG;AAJZ,KARQ,EAiBR;AACEH,MAAAA,SAAS,EAAE,iBADb;AAEEH,MAAAA,KAAK,EAAE;AAFT,KAjBQ,EAqBR;AACA;AACA;AACA;AACEA,MAAAA,KAAK,EAAE,mBADT;AAEEqB,MAAAA,OAAO,EAAER,aAFX;AAGES,MAAAA,QAAQ,EAAE;AAHZ,KAxBQ,EA6BR;AACEtB,MAAAA,KAAK,EAAE,GADT;AACcI,MAAAA,GAAG,EAAE,MADnB;AAC2B;AACA;AACA;AACA;AACzBgB,MAAAA,OAAO,EAAE,GALX;AAKgB;AACdnB,MAAAA,WAAW,EAAE,IANf;AAOEC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,SAAS,EAAE,SADb;AAEEH,QAAAA,KAAK,EAAEe;AAFT,OADQ,EAKR;AACEf,QAAAA,KAAK,EAAE,IADT;AACeW,QAAAA,cAAc,EAAE,IAD/B;AACqCF,QAAAA,UAAU,EAAE,IADjD;AAEEc,QAAAA,SAAS,EAAE,CAFb;AAGED,QAAAA,QAAQ,EAAER,YAHZ;AAIEZ,QAAAA,QAAQ,EAAE,CACR;AACEF,UAAAA,KAAK,EAAE,UADT;AAEEG,UAAAA,SAAS,EAAC;AAFZ,SADQ,EAKRL,IAAI,CAACO,gBALG,EAMRP,IAAI,CAACQ,iBANG,EAORR,IAAI,CAACS,eAPG;AAJZ,OALQ;AAPZ,KA7BQ,EAyDR;AACEJ,MAAAA,SAAS,EAAE,cADb;AAC6BH,MAAAA,KAAK,EAAEgB,QADpC;AAEEO,MAAAA,SAAS,EAAE;AAFb,KAzDQ,EA6DR;AACEvB,MAAAA,KAAK,EAAE,IADT;AACeI,MAAAA,GAAG,EAAE,IADpB;AAEEgB,MAAAA,OAAO,EAAE,IAFX;AAGElB,MAAAA,QAAQ,EAAE,CACRJ,IAAI,CAACc,oBADG,EAER;AAAEZ,QAAAA,KAAK,EAAE;AAAT,OAFQ,EAEQ;AAChBiB,MAAAA,IAHQ;AAHZ,KA7DQ;AAJL,GAAP;AA4ED;;AAEDO,MAAM,CAACC,OAAP,GAAiB5B,GAAjB","sourcesContent":["/*\nLanguage: CSS\nCategory: common, css\nWebsite: https://developer.mozilla.org/en-US/docs/Web/CSS\n*/\n\n/** @type LanguageFn */\nfunction css(hljs) {\n  var FUNCTION_LIKE = {\n    begin: /[\\w-]+\\(/, returnBegin: true,\n    contains: [\n      {\n        className: 'built_in',\n        begin: /[\\w-]+/\n      },\n      {\n        begin: /\\(/, end: /\\)/,\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.CSS_NUMBER_MODE,\n        ]\n      }\n    ]\n  };\n  var ATTRIBUTE = {\n    className: 'attribute',\n    begin: /\\S/, end: ':', excludeEnd: true,\n    starts: {\n      endsWithParent: true, excludeEnd: true,\n      contains: [\n        FUNCTION_LIKE,\n        hljs.CSS_NUMBER_MODE,\n        hljs.QUOTE_STRING_MODE,\n        hljs.APOS_STRING_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        {\n          className: 'number', begin: '#[0-9A-Fa-f]+'\n        },\n        {\n          className: 'meta', begin: '!important'\n        }\n      ]\n    }\n  };\n  var AT_IDENTIFIER = '@[a-z-]+'; // @font-face\n  var AT_MODIFIERS = \"and or not only\";\n  var AT_PROPERTY_RE = /@-?\\w[\\w]*(-\\w+)*/; // @-webkit-keyframes\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /([*]\\s?)?(?:[A-Z_.\\-\\\\]+|--[a-zA-Z0-9_-]+)\\s*(\\/\\*\\*\\/)?:/, returnBegin: true, end: ';', endsWithParent: true,\n    contains: [\n      ATTRIBUTE\n    ]\n  };\n\n  return {\n    name: 'CSS',\n    case_insensitive: true,\n    illegal: /[=|'\\$]/,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'selector-id', begin: /#[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-class', begin: '\\\\.' + IDENT_RE\n      },\n      {\n        className: 'selector-attr',\n        begin: /\\[/, end: /\\]/,\n        illegal: '$',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n        ]\n      },\n      {\n        className: 'selector-pseudo',\n        begin: /:(:)?[a-zA-Z0-9_+()\"'.-]+/\n      },\n      // matching these here allows us to treat them more like regular CSS\n      // rules so everything between the {} gets regular rule highlighting,\n      // which is what we want for page and font-face\n      {\n        begin: '@(page|font-face)',\n        lexemes: AT_IDENTIFIER,\n        keywords: '@page @font-face'\n      },\n      {\n        begin: '@', end: '[{;]', // at_rule eating first \"{\" is a good thing\n                                 // because it doesn’t let it to be parsed as\n                                 // a rule set but instead drops parser into\n                                 // the default mode which is how it should be.\n        illegal: /:/, // break on Less variables @var: ...\n        returnBegin: true,\n        contains: [\n          {\n            className: 'keyword',\n            begin: AT_PROPERTY_RE\n          },\n          {\n            begin: /\\s/, endsWithParent: true, excludeEnd: true,\n            relevance: 0,\n            keywords: AT_MODIFIERS,\n            contains: [\n              {\n                begin: /[a-z-]+:/,\n                className:\"attribute\"\n              },\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'selector-tag', begin: IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /\\{/, end: /\\}/,\n        illegal: /\\S/,\n        contains: [\n          hljs.C_BLOCK_COMMENT_MODE,\n          { begin: /;/ }, // empty ; rule\n          RULE,\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = css;\n"]},"metadata":{},"sourceType":"script"}